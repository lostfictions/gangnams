{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap ee88083b7fe487507adf","webpack:///./index.js","webpack:///./corpora/data/animals/common.json","webpack:///./corpora/data/architecture/rooms.json","webpack:///./corpora/data/colors/web_colors.json","webpack:///./corpora/data/foods/vegetables.json","webpack:///./corpora/data/materials/metals.json","webpack:///./corpora/data/mythology/monsters.json","webpack:///./corpora/data/plants/flowers.json","webpack:///./corpora/data/technology/appliances.json","webpack:///./corpora/data/words/adjs.json","webpack:///./~/pluralize/pluralize.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","pluralize","r","arr","Math","floor","random","length","upper","str","toUpperCase","slice","upperAll","split","map","join","weighted","weights","totalWeight","reduce","lastWeight","i","w","rr","_i","_w","Error","corpora","adjectives","adjs","metals","animals","appliances","colors","color","flowers","monsters","names","rooms","vegetables","descriptor","name","gangName","window","console","log","description","hex","sources","root","this","toTitleCase","charAt","substr","toLowerCase","sanitizeRule","rule","RegExp","restoreCase","word","token","interpolate","args","replace","match","index","sanitizeWord","collection","uncountables","hasOwnProperty","len","test","result","arguments","replaceWord","replaceMap","keepMap","rules","count","inclusive","pluralized","singular","plural","pluralRules","singularRules","irregularPlurals","irregularSingles","addPluralRule","replacement","push","addSingularRule","addUncountableRule","addIrregularRule","single","forEach"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,YE5CD,IAAMW,GAAYX,EAAQ,IAEpBY,EAAI,SAACC,GAAD,MAASA,GAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UAEhDC,EAAQ,SAACC,GAAD,MAASA,GAAI,GAAGC,cAAgBD,EAAIE,MAAM,IAClDC,EAAW,SAACH,GAAD,MAASA,GAAII,MAAM,KAAKC,IAAIN,GAAOO,KAAK,KAAKF,MAAM,KAAKC,IAAIN,GAAOO,KAAK,MAEnFC,EAAW,SAACC,GAIhB,IAAI,GAHEC,GAAcD,EAAQE,OAAO,SAACnB,EAAGD,GAAJ,MAAUC,GAAID,EAAE,IAAI,GAEnDqB,EAAa,EACTC,EAAE,EAAGA,EAAEJ,EAAQV,OAAQc,IAAK,CAClC,GAAMC,GAAIL,EAAQI,EAClBC,GAAE,GAAKA,EAAE,GAAKJ,EAAcE,EAC5BA,EAAaE,EAAE,GAMjB,MAFAL,GAAQA,EAAQV,OAAO,GAAG,GAAK,EAExB,WAEL,IAAI,GADEgB,GAAKnB,KAAKE,SACRkB,EAAE,EAAGA,EAAEP,EAAQV,OAAQiB,IAAK,CAClC,GAAMC,GAAIR,EAAQO,EAClB,IAAGD,EAAKE,EAAE,GACR,MAAOA,GAAE,GAGb,KAAM,IAAIC,OAAM,gBAKdC,GAEJC,WAAYtC,EAAQ,GAA6BuC,KACjDC,OAAQxC,EAAQ,GAAmCwC,OAEnDC,QAASzC,EAAQ,GAAiCyC,QAClDC,WAAY1C,EAAQ,GAAwC0C,WAC5DC,OAAQ3C,EAAQ,GAAoC2C,OAAOnB,IAAI,SAAAf,GAAA,MAAKA,GAAEmC,MAAMrB,MAAM,aAAaE,KAAK,OACpGoB,QAAS7C,EAAQ,GAAiC6C,QAClDC,SAAU9C,EAAQ,GAAqC+C,MACvDC,MAAOhD,EAAQ,GAAqCgD,MACpDC,WAAYjD,EAAQ,GAAmCiD,YAInDC,EAAaxB,IAEdW,EAAQC,WAAY,IACpBD,EAAQM,OAAQ,KAChBN,EAAQG,OAAQ,MAIfW,EAAOzB,IAERW,EAAQI,QAAS,MACjBJ,EAAQK,WAAY,KACpBL,EAAQQ,QAAS,KACjBR,EAAQS,SAAU,MAClBT,EAAQW,MAAO,KACfX,EAAQY,WAAY,OAInBG,EAAW,kBAAO,MAAO9B,EAASV,EAAEsC,MAAgB5B,EAASX,EAAUC,EAAEuC,QAE1D,oBAAXE,QACRA,OAAOD,SAAWA,EAGlBE,QAAQC,IAAIH,IAAW3B,KAAK,OF+CxB,SAASrB,EAAQD,GAEtB,YG5HDC,GAAOD,SACNsC,SACC,WACA,YACA,SACA,WACA,MACA,YACA,SACA,SACA,MACA,OACA,SACA,QACA,OACA,UACA,OACA,QACA,SACA,WACA,MACA,YACA,UACA,aACA,aACA,WACA,SACA,MACA,SACA,YACA,OACA,OACA,QACA,MACA,SACA,YACA,WACA,MACA,MACA,SACA,QACA,OACA,MACA,OACA,UACA,eACA,UACA,MACA,OACA,SACA,UACA,eACA,aACA,aACA,UACA,WACA,eACA,MACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,WACA,QACA,OACA,QACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,OACA,WACA,SACA,QACA,gBACA,QACA,OACA,UACA,UACA,aACA,OACA,SACA,UACA,YACA,OACA,QACA,KACA,QACA,UACA,WACA,SACA,MACA,WACA,aACA,YACA,WACA,cACA,OACA,SACA,UACA,MACA,MACA,WACA,UACA,aACA,aACA,OACA,QACA,QACA,aACA,QACA,QACA,QACA,WACA,QACA,QACA,OACA,SACA,SACA,UACA,SACA,QACA,UACA,OACA,YACA,SACA,YACA,MACA,WHHI,SAASrC,EAAQD,GAEtB,YItIDC,GAAOD,SACNqD,YAAe,2BACfR,OACC,SACA,iBACA,iBACA,SACA,qBACA,mBACA,cACA,WACA,SACA,gBACA,UACA,QACA,aACA,WACA,WACA,WACA,WACA,UACA,gBACA,YACA,cACA,UACA,iBACA,YACA,QACA,YACA,YACA,SACA,gBACA,SACA,YACA,aACA,YACA,SACA,YACA,cACA,eACA,kBACA,eACA,eACA,mBACA,gBACA,YACA,WACA,WACA,MACA,cACA,YACA,eACA,gBACA,kBACA,iBACA,cACA,iBACA,kBACA,cACA,eACA,QACA,YACA,SACA,aACA,MACA,aACA,UACA,eACA,UACA,cACA,QACA,cACA,OACA,SACA,WACA,WACA,aACA,WACA,WACA,UACA,SACA,aACA,SACA,SACA,WACA,YACA,aACA,WACA,QACA,QACA,aACA,WACA,eACA,aACA,YACA,eACA,SACA,QACA,UACA,UACA,cACA,4BACA,UACA,eACA,eACA,WACA,eACA,cACA,cACA,gBACA,cJiCI,SAAS5C,EAAQD,GAEtB,YKjJDC,GAAOD,SACNqD,YAAe,4BACfb,SAEEC,MAAS,YACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,iBACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,iBACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,iBACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,uBACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,iBACTa,IAAO,YAGPb,MAAS,iBACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,mBACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,iBACTa,IAAO,YAGPb,MAAS,kBACTa,IAAO,YAGPb,MAAS,oBACTa,IAAO,YAGPb,MAAS,kBACTa,IAAO,YAGPb,MAAS,kBACTa,IAAO,YAGPb,MAAS,eACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,gBACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,MACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,WACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,MACTa,IAAO,YAGPb,MAAS,OACTa,IAAO,YAGPb,MAAS,UACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,YACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,QACTa,IAAO,YAGPb,MAAS,aACTa,IAAO,YAGPb,MAAS,SACTa,IAAO,YAGPb,MAAS,cACTa,IAAO,cLaJ,SAASrD,EAAQD,GAEtB,YMhkBDC,GAAOD,SACNqD,YAAe,wBACfP,YACC,eACA,iBACA,WACA,QACA,YACA,UACA,YACA,YACA,aACA,gBACA,QACA,cACA,OACA,aACA,iBACA,WACA,gBACA,cACA,eACA,WACA,kBACA,mBACA,UACA,YACA,UACA,SACA,cACA,iBACA,WACA,SACA,YACA,QACA,UACA,WACA,SACA,WACA,gBACA,OACA,aACA,YACA,WACA,SACA,WACA,OACA,WACA,SACA,SACA,aACA,SACA,SACA,aACA,SACA,aACA,eACA,WACA,kBACA,cACA,iBACA,WACA,sBACA,SACA,OACA,cACA,WACA,WACA,QACA,SACA,cACA,UACA,UACA,YACA,QACA,YACA,WACA,YACA,YACA,gBACA,YACA,UACA,sBACA,SACA,OACA,QACA,UACA,UACA,UACA,UACA,YACA,OACA,aACA,SACA,UACA,YACA,SACA,UACA,WACA,cACA,WACA,OACA,WACA,UACA,UACA,WACA,WACA,mBACA,UACA,UACA,eACA,iBACA,OACA,UACA,QACA,SACA,aACA,SACA,SACA,SACA,iBACA,aACA,eACA,MACA,cN6cI,SAAS7C,EAAQD,GAEtB,YO3kBDC,GAAOD,SACNqD,YAAe,SACfhB,QACC,WACA,YACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,cACA,SACA,SACA,WACA,SACA,SACA,SACA,eACA,UACA,aACA,cACA,SACA,WACA,UACA,WACA,aACA,UACA,OACA,UACA,UACA,UACA,SACA,UACA,OACA,YACA,aACA,OACA,UACA,WACA,YACA,YACA,aACA,cACA,UACA,aACA,YACA,YACA,SACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,YACA,eACA,aACA,eACA,SACA,UACA,UACA,cACA,WACA,YACA,gBACA,WACA,WACA,aACA,SACA,SACA,YACA,WACA,aACA,UACA,WACA,UACA,UACA,MACA,WACA,WACA,WACA,aACA,cACA,cACA,YACA,UACA,WACA,YACA,UACA,OACA,ePsfI,SAASpC,EAAQD,GAEtB,YQtlBDC,GAAOD,SACNqD,YAAe,gDACfE,QAAW,gFACXX,OACC,QACA,UACA,UACA,UACA,UACA,aACA,aACA,UACA,QACA,QACA,SACA,SACA,QACA,QACA,YACA,MACA,QACA,OACA,cACA,WACA,QACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,UACA,UACA,MACA,QACA,aACA,YACA,aACA,QACA,MACA,UACA,QACA,SACA,SACA,UACA,aACA,OACA,YACA,UACA,SACA,WACA,QACA,OACA,MACA,QACA,OACA,MACA,MACA,UACA,UACA,QACA,cACA,MACA,YACA,QACA,SACA,QACA,UACA,SACA,SACA,WACA,QACA,cACA,QACA,UACA,UACA,WACA,OACA,UACA,WACA,QACA,QACA,SACA,SACA,OACA,YRygBI,SAAS3C,EAAQD,GAEtB,YSlmBDC,GAAOD,SACN0C,SACC,UACA,YACA,WACA,QACA,SACA,eACA,UACA,aACA,WACA,mBACA,WACA,cACA,YACA,YACA,YACA,eACA,YACA,SACA,SACA,QACA,SACA,WACA,aACA,YACA,WACA,gBACA,WACA,UACA,gBACA,YACA,WACA,UACA,WACA,QACA,OACA,UACA,gBACA,WACA,QACA,OACA,eACA,WACA,WACA,SACA,YACA,iBACA,SACA,gBACA,QACA,UACA,eACA,WACA,QACA,OACA,aACA,YACA,QACA,UACA,QACA,QACA,SACA,aACA,YT0iBI,SAASzC,EAAQD,GAEtB,YU5mBDC,GAAOD,SACNqD,YAAe,4BACfd,YACC,kBACA,YACA,cACA,aACA,YACA,mBACA,cACA,WACA,eACA,kBACA,SACA,gBACA,eACA,aACA,cACA,yBACA,gBACA,eACA,oBACA,cACA,qBACA,YACA,oBACA,uBACA,kBACA,eACA,cACA,aACA,eACA,aACA,aACA,kBACA,wBACA,qBACA,mBACA,mBACA,aACA,gBACA,WACA,oBACA,2BACA,gBACA,eACA,wBACA,aACA,YACA,eACA,cACA,YACA,aACA,OACA,SACA,8BACA,wBACA,SACA,sBACA,kBACA,qBACA,iBACA,YACA,aACA,OACA,wBACA,eACA,mBACA,gBACA,kBACA,iBACA,WACA,iBACA,eACA,cACA,gBACA,yBACA,aACA,mBACA,qBACA,sBACA,iBACA,cACA,eACA,mBACA,iBACA,QACA,YACA,YACA,eACA,UACA,+BACA,4BACA,YACA,UACA,eACA,SACA,gBACA,eACA,iBACA,eACA,YACA,cACA,kBACA,eACA,eACA,eACA,cACA,aACA,qBVwgBI,SAAStC,EAAQD,GAEtB,YWvnBDC,GAAOD,SACNqD,YAAe,gCACfjB,MACC,eACA,YACA,WACA,WACA,SACA,UACA,UACA,SACA,QACA,SACA,YACA,WACA,WACA,cACA,WACA,aACA,aACA,QACA,YACA,YACA,aACA,UACA,QACA,UACA,UACA,UACA,SACA,aACA,aACA,YACA,WACA,UACA,YACA,UACA,SACA,UACA,aACA,UACA,aACA,UACA,QACA,YACA,SACA,aACA,YACA,UACA,UACA,aACA,cACA,iBACA,YACA,aACA,cACA,eACA,eACA,SACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,gBACA,mBACA,aACA,UACA,QACA,SACA,YACA,YACA,UACA,WACA,SACA,SACA,WACA,SACA,SACA,WACA,WACA,UACA,SACA,aACA,WACA,UACA,YACA,UACA,cACA,UACA,YACA,QACA,UACA,cACA,QACA,UACA,UACA,cACA,WACA,WACA,SACA,YACA,SACA,QACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,SACA,WACA,QACA,UACA,WACA,SACA,UACA,UACA,YACA,eACA,WACA,WACA,YACA,SACA,YACA,SACA,SACA,gBACA,WACA,SACA,YACA,WACA,WACA,aACA,iBACA,QACA,QACA,YACA,WACA,WACA,WACA,YACA,WACA,SACA,aACA,WACA,aACA,SACA,SACA,WACA,SACA,eACA,cACA,WACA,YACA,aACA,gBACA,eACA,YACA,eACA,aACA,cACA,cACA,YACA,eACA,YACA,UACA,gBACA,gBACA,eACA,cACA,eACA,kBACA,gBACA,cACA,SACA,SACA,WACA,cACA,aACA,eACA,SACA,QACA,QACA,SACA,YACA,YACA,QACA,UACA,UACA,YACA,WACA,YACA,UACA,YACA,cACA,UACA,YACA,WACA,UACA,YACA,aACA,YACA,YACA,aACA,cACA,UACA,WACA,UACA,WACA,WACA,WACA,iBACA,WACA,UACA,YACA,eACA,aACA,aACA,WACA,aACA,eACA,aACA,gBACA,YACA,YACA,SACA,YACA,QACA,SACA,eACA,WACA,QACA,WACA,UACA,QACA,QACA,UACA,SACA,YACA,QACA,UACA,aACA,aACA,UACA,WACA,YACA,QACA,SACA,UACA,YACA,WACA,YACA,WACA,SACA,UACA,YACA,aACA,WACA,aACA,WACA,WACA,YACA,YACA,YACA,cACA,SACA,UACA,aACA,SACA,WACA,YACA,aACA,eACA,YACA,cACA,WACA,cACA,SACA,WACA,aACA,WACA,aACA,aACA,cACA,SACA,gBACA,WACA,WACA,YACA,SACA,UACA,cACA,aACA,YACA,SACA,UACA,eACA,QACA,aACA,WACA,YACA,SACA,YACA,YACA,WACA,UACA,SACA,SACA,YACA,SACA,YACA,SACA,WACA,aACA,SACA,YACA,UACA,QACA,QACA,YACA,UACA,QACA,WACA,SACA,YACA,YACA,eACA,aACA,WACA,aACA,WACA,WACA,YACA,UACA,QACA,UACA,SACA,aACA,SACA,SACA,QACA,UACA,WACA,WACA,YACA,YACA,SACA,SACA,QACA,UACA,WACA,YACA,WACA,WACA,cACA,QACA,cACA,SACA,WACA,aACA,SACA,UACA,WACA,UACA,WACA,WACA,aACA,QACA,QACA,aACA,YACA,WACA,YACA,eACA,SACA,UACA,YACA,aACA,QACA,eACA,UACA,aACA,WACA,SACA,eACA,mBACA,WACA,aACA,QACA,UACA,WACA,WACA,YACA,SACA,WACA,aACA,WACA,aACA,UACA,QACA,WACA,QACA,cACA,aACA,aACA,gBACA,UACA,cACA,eACA,WACA,UACA,YACA,YACA,UACA,YACA,iBACA,aACA,YACA,aACA,YACA,cACA,UACA,WACA,eACA,mBACA,gBACA,SACA,iBACA,cACA,QACA,UACA,SACA,aACA,UACA,YACA,SACA,cACA,SACA,aACA,YACA,YACA,YACA,WACA,eACA,cACA,iBACA,cACA,cACA,SACA,cACA,eACA,cACA,aACA,YACA,aACA,WACA,UACA,UACA,UACA,QACA,eACA,SACA,QACA,UACA,aACA,QACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,cACA,UACA,UACA,YACA,aACA,YACA,SACA,WACA,YACA,YACA,WACA,QACA,QACA,UACA,SACA,YACA,eACA,eACA,iBACA,UACA,YACA,aACA,WACA,WACA,QACA,WACA,QACA,YACA,WACA,SACA,UACA,SACA,WACA,QACA,WACA,gBACA,aACA,YACA,YACA,UACA,YACA,SACA,UACA,YACA,WACA,YACA,WACA,gBACA,WACA,SACA,UACA,SACA,SACA,YACA,eACA,gBACA,QACA,WACA,YACA,YACA,YACA,QACA,aACA,YACA,UACA,WACA,SACA,SACA,YACA,UACA,gBACA,oBACA,UACA,WACA,QACA,aACA,SACA,cACA,UACA,WACA,WACA,YACA,eACA,WACA,SACA,QACA,UACA,SACA,gBACA,WACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,WACA,UACA,SACA,SACA,aACA,YACA,cACA,WACA,SACA,WACA,UACA,SACA,WACA,YACA,aACA,WACA,aACA,SACA,QACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,SACA,UACA,eACA,aACA,UACA,QACA,SACA,UACA,aACA,QACA,cACA,aACA,aACA,YACA,YACA,gBACA,gBACA,cACA,WACA,QACA,UACA,WACA,YACA,UACA,QACA,aACA,aACA,UACA,cACA,QACA,WACA,WACA,aACA,QACA,cACA,aACA,YACA,UACA,cACA,eACA,YACA,YACA,eACA,UACA,cACA,WACA,SACA,SACA,UACA,SACA,SACA,YACA,UACA,UACA,UACA,aACA,UACA,aACA,eACA,aACA,cACA,WACA,YACA,cACA,UACA,gBACA,aACA,SACA,SACA,YACA,QACA,aACA,UACA,QACA,WACA,WACA,YACA,aACA,aACA,YACA,WACA,aACA,aACA,QACA,cACA,WACA,cACA,cACA,YACA,YACA,YACA,YACA,UACA,WACA,aACA,SACA,WACA,YACA,cACA,WACA,aACA,WACA,YACA,YACA,aACA,aACA,SACA,SACA,SACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,UACA,aACA,QACA,QACA,cACA,UACA,aACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,cACA,aACA,cACA,gBACA,SACA,SACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,QACA,UACA,YACA,aACA,QACA,cACA,SACA,WACA,aACA,UACA,WACA,SACA,WACA,cACA,WACA,WACA,YACA,QACA,YACA,SACA,UACA,UACA,WACA,YACA,YACA,cACA,QACA,aACA,cACA,WACA,SACA,WACA,UACA,YACA,cACA,WACA,SACA,YACA,QACA,YACA,SACA,SACA,YACA,WACA,YACA,WACA,UACA,YACA,eACA,SACA,YACA,SACA,SACA,SACA,UACA,WACA,YACA,eACA,WACA,WACA,QACA,aACA,aACA,cACA,aACA,YACA,UACA,SACA,WACA,eACA,cACA,cACA,YACA,YACA,cACA,UACA,WACA,WACA,WACA,WACA,aACA,eACA,aACA,YACA,SACA,UACA,WACA,SACA,QACA,YACA,WACA,aACA,YACA,cACA,cACA,WACA,UACA,cACA,eACA,QACA,SACA,QACA,UACA,WACA,UACA,cACA,cACA,UACA,WACA,WACA,UACA,QACA,QACA,WACA,SACA,UACA,WACA,aACA,UACA,aACA,aACA,eACA,WACA,gBACA,eACA,WACA,gBACA,cACA,WACA,cACA,YACA,SACA,UACA,UACA,aACA,aACA,eACA,eACA,gBACA,aACA,aACA,YACA,YACA,WACA,aACA,eACA,aACA,eACA,SACA,eACA,cACA,aACA,cACA,SACA,aACA,WACA,eACA,eACA,WACA,SACA,YACA,SACA,UACA,UACA,QACA,UACA,QACA,SACA,UACA,WACA,UACA,UACA,aACA,SACA,SACA,YACA,YACA,SACA,QACA,SACA,WACA,SACA,aACA,UACA,SACA,UACA,SACA,aACA,QACA,UACA,YACA,cACA,gBACA,UACA,UACA,YACA,QACA,WACA,UACA,UACA,WACA,aACA,WACA,UACA,SACA,SACA,WACA,WACA,WACA,UACA,YACA,aACA,UACA,eXpUI,SAASnC,EAAQD,EAASH,IY9nBhC,SAAA2D,EAAAhD,GAIAP,EAAAD,QAAAQ,KAUCiD,KAAA,WAeD,QAAAC,GAAA1C,GACA,MAAAA,GAAA2C,OAAA,GAAA1C,cAAAD,EAAA4C,OAAA,GAAAC,cASA,QAAAC,GAAAC,GACA,sBAAAA,GACA,GAAAC,QAAA,IAAAD,EAAA,SAGAA,EAWA,QAAAE,GAAAC,EAAAC,GAEA,MAAAD,OAAAjD,cACAkD,EAAAlD,cAIAiD,EAAA,KAAAA,EAAA,GAAAjD,cACAyC,EAAAS,GAIAA,EAAAN,cAUA,QAAAO,GAAApD,EAAAqD,GACA,MAAArD,GAAAsD,QAAA,eAAkC,SAAAC,EAAAC,GAClC,MAAAH,GAAAG,IAAA,KAYA,QAAAC,GAAAN,EAAAD,EAAAQ,GAEA,IAAAP,EAAArD,QAAA6D,EAAAC,eAAAT,GACA,MAAAD,EAMA,KAHA,GAAAW,GAAAH,EAAA5D,OAGA+D,KAAA,CACA,GAAAd,GAAAW,EAAAG,EAGA,IAAAd,EAAA,GAAAe,KAAAZ,GACA,MAAAA,GAAAI,QAAAP,EAAA,YAAAQ,EAAAC,EAAAN,GACA,GAAAa,GAAAX,EAAAL,EAAA,GAAAiB,UAEA,YAAAT,EACAN,EAAAC,EAAAM,EAAA,GAAAO,GAGAd,EAAAM,EAAAQ,KAKA,MAAAb,GAWA,QAAAe,GAAAC,EAAAC,EAAAC,GACA,gBAAAlB,GAEA,GAAAC,GAAAD,EAAAL,aAGA,OAAAsB,GAAAP,eAAAT,GACAF,EAAAC,EAAAC,GAIAe,EAAAN,eAAAT,GACAF,EAAAC,EAAAgB,EAAAf,IAIAM,EAAAN,EAAAD,EAAAkB,IAYA,QAAA5E,GAAA0D,EAAAmB,EAAAC,GACA,GAAAC,GAAA,IAAAF,EACA7E,EAAAgF,SAAAtB,GAAA1D,EAAAiF,OAAAvB,EAEA,QAAAoB,EAAAD,EAAA,QAAAE,EA/IA,GAAAG,MACAC,KACAhB,KACAiB,KACAC,IAwZA,OArQArF,GAAAiF,OAAAR,EACAY,EAAAD,EAAAF,GAQAlF,EAAAgF,SAAAP,EACAW,EAAAC,EAAAF,GASAnF,EAAAsF,cAAA,SAAA/B,EAAAgC,GACAL,EAAAM,MAAAlC,EAAAC,GAAAgC,KASAvF,EAAAyF,gBAAA,SAAAlC,EAAAgC,GACAJ,EAAAK,MAAAlC,EAAAC,GAAAgC,KAQAvF,EAAA0F,mBAAA,SAAAhC,GACA,sBAAAA,QACAS,EAAAT,EAAAL,gBAAA,IAKArD,EAAAsF,cAAA5B,EAAA,UACA1D,GAAAyF,gBAAA/B,EAAA,QASA1D,EAAA2F,iBAAA,SAAAC,EAAAX,GACAA,IAAA5B,cACAuC,IAAAvC,cAEAgC,EAAAO,GAAAX,EACAG,EAAAH,GAAAW,KAQA,WACA,YACA,cACA,eACA,gBACA,uBACA,0BACA,wBACA,yBACA,yBACA,0BACA,aACA,iBACA,iBAEA,kBACA,oBACA,wBACA,wBACA,wBAEA,mBACA,qBAEA,sBACA,oBACA,oBACA,oBACA,sBACA,0BAEA,cACA,eACA,eACA,gBACA,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,mBACA,qBACA,uBACA,uBACAC,QAAA,SAAAtC,GACA,MAAAvD,GAAA2F,iBAAApC,EAAA,GAAAA,EAAA,QAOA,aACA,yBACA,yBACA,2CACA,uBACA,iDACA,0GACA,yCACA,oCACA,2BACA,gIACA,6GACA,gBACA,uDACA,8BACA,iCACA,6BACA,2DACA,gCACA,iCACA,8BACA,gBACA,mBACA,eACAsC,QAAA,SAAAtC,GACA,MAAAvD,GAAAsF,cAAA/B,EAAA,GAAAA,EAAA,QAOA,WACA,gBACA,mFACA,kCACA,yEACA,0CACA,8BACA,uDACA,iCACA,wBACA,6BACA,wFACA,sBACA,2BACA,0CACA,2GACA,kHACA,uGACA,kCACA,wCACA,+BACA,+BACA,sBACA,mBACA,gBACAsC,QAAA,SAAAtC,GACA,MAAAvD,GAAAyF,gBAAAlC,EAAA,GAAAA,EAAA,OAQA,SACA,SACA,QACA,QACA,UACA,OACA,UACA,MACA,cACA,QACA,YACA,SACA,WACA,SACA,YACA,MACA,YACA,YACA,WACA,UACA,UACA,WACA,eACA,SACA,SACA,YACA,WACA,cACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,OACA,QACA,OACA,OACA,WACA,SACA,YACA,WACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,QACA,OACA,UACA,aACA,WACA,MAEA,QACA,QACA,SACA,SACA,UACA,YACA,iBACAsC,QAAA7F,EAAA0F,oBAEA1F","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*eslint semi: [\"error\", \"never\"]*/\n\t\n\tvar pluralize = __webpack_require__(10);\n\t\n\tvar r = function r(arr) {\n\t  return arr[Math.floor(Math.random() * arr.length)];\n\t};\n\t\n\tvar upper = function upper(str) {\n\t  return str[0].toUpperCase() + str.slice(1);\n\t};\n\tvar upperAll = function upperAll(str) {\n\t  return str.split(' ').map(upper).join(' ').split('-').map(upper).join('-');\n\t};\n\t\n\tvar weighted = function weighted(weights) {\n\t  var totalWeight = weights.reduce(function (p, c) {\n\t    return p + c[1];\n\t  }, 0);\n\t\n\t  var lastWeight = 0;\n\t  for (var i = 0; i < weights.length; i++) {\n\t    var w = weights[i];\n\t    w[1] = w[1] / totalWeight + lastWeight;\n\t    lastWeight = w[1];\n\t  }\n\t\n\t  //Set the final weight to exactly one\n\t  weights[weights.length - 1][1] = 1;\n\t\n\t  return function () {\n\t    var rr = Math.random();\n\t    for (var _i = 0; _i < weights.length; _i++) {\n\t      var _w = weights[_i];\n\t      if (rr < _w[1]) {\n\t        return _w[0];\n\t      }\n\t    }\n\t    throw new Error('We goofed!');\n\t  };\n\t};\n\t\n\tvar corpora = {\n\t  // adv: require('./corpora/data/words/adverbs').adverbs,\n\t  adjectives: __webpack_require__(9).adjs,\n\t  metals: __webpack_require__(5).metals,\n\t\n\t  animals: __webpack_require__(1).animals,\n\t  appliances: __webpack_require__(8).appliances,\n\t  colors: __webpack_require__(3).colors.map(function (c) {\n\t    return c.color.split(/(?=[A-Z])/).join(' ');\n\t  }),\n\t  flowers: __webpack_require__(7).flowers,\n\t  monsters: __webpack_require__(6).names,\n\t  rooms: __webpack_require__(2).rooms,\n\t  vegetables: __webpack_require__(4).vegetables\n\t};\n\t\n\tvar descriptor = weighted([[corpora.adjectives, 1], [corpora.colors, 0.8], [corpora.metals, 0.2]]);\n\t\n\tvar name = weighted([[corpora.animals, 1.3], [corpora.appliances, 0.1], [corpora.flowers, 0.2], [corpora.monsters, 1.5], [corpora.rooms, 0.1], [corpora.vegetables, 0.25]]);\n\t\n\tvar gangName = function gangName() {\n\t  return ['The', upperAll(r(descriptor())), upperAll(pluralize(r(name())))];\n\t};\n\t\n\tif (typeof window !== 'undefined') {\n\t  window.gangName = gangName;\n\t} else {\n\t  console.log(gangName().join(' '));\n\t}\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"animals\": [\"aardvark\", \"alligator\", \"alpaca\", \"antelope\", \"ape\", \"armadillo\", \"baboon\", \"badger\", \"bat\", \"bear\", \"beaver\", \"bison\", \"boar\", \"buffalo\", \"bull\", \"camel\", \"canary\", \"capybara\", \"cat\", \"chameleon\", \"cheetah\", \"chimpanzee\", \"chinchilla\", \"chipmunk\", \"cougar\", \"cow\", \"coyote\", \"crocodile\", \"crow\", \"deer\", \"dingo\", \"dog\", \"donkey\", \"dromedary\", \"elephant\", \"elk\", \"ewe\", \"ferret\", \"finch\", \"fish\", \"fox\", \"frog\", \"gazelle\", \"gila monster\", \"giraffe\", \"gnu\", \"goat\", \"gopher\", \"gorilla\", \"grizzly bear\", \"ground hog\", \"guinea pig\", \"hamster\", \"hedgehog\", \"hippopotamus\", \"hog\", \"horse\", \"hyena\", \"ibex\", \"iguana\", \"impala\", \"jackal\", \"jaguar\", \"kangaroo\", \"koala\", \"lamb\", \"lemur\", \"leopard\", \"lion\", \"lizard\", \"llama\", \"lynx\", \"mandrill\", \"marmoset\", \"mink\", \"mole\", \"mongoose\", \"monkey\", \"moose\", \"mountain goat\", \"mouse\", \"mule\", \"muskrat\", \"mustang\", \"mynah bird\", \"newt\", \"ocelot\", \"opossum\", \"orangutan\", \"oryx\", \"otter\", \"ox\", \"panda\", \"panther\", \"parakeet\", \"parrot\", \"pig\", \"platypus\", \"polar bear\", \"porcupine\", \"porpoise\", \"prairie dog\", \"puma\", \"rabbit\", \"raccoon\", \"ram\", \"rat\", \"reindeer\", \"reptile\", \"rhinoceros\", \"salamander\", \"seal\", \"sheep\", \"shrew\", \"silver fox\", \"skunk\", \"sloth\", \"snake\", \"squirrel\", \"tapir\", \"tiger\", \"toad\", \"turtle\", \"walrus\", \"warthog\", \"weasel\", \"whale\", \"wildcat\", \"wolf\", \"wolverine\", \"wombat\", \"woodchuck\", \"yak\", \"zebra\"]\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"Different kinds of rooms\",\n\t\t\"rooms\": [\"aerary\", \"aircraft cabin\", \"airport lounge\", \"alcove\", \"anatomical theatre\", \"anechoic chamber\", \"antechamber\", \"anteroom\", \"armory\", \"assembly room\", \"atelier\", \"attic\", \"auditorium\", \"backroom\", \"ballroom\", \"basement\", \"bathroom\", \"bedroom\", \"billiard room\", \"boardroom\", \"boiler room\", \"boudoir\", \"breakfast nook\", \"breezeway\", \"cabin\", \"cafeteria\", \"caldarium\", \"cellar\", \"changing room\", \"chapel\", \"classroom\", \"clean room\", \"cloakroom\", \"closet\", \"cold room\", \"common room\", \"computer lab\", \"conference room\", \"conservatory\", \"control room\", \"conversation pit\", \"corner office\", \"courtroom\", \"cry room\", \"darkroom\", \"den\", \"dining room\", \"dormitory\", \"drawing room\", \"dressing room\", \"electrical room\", \"emergency room\", \"engine room\", \"equipment room\", \"fallout shelter\", \"family room\", \"fitting room\", \"foyer\", \"game room\", \"garage\", \"guest room\", \"gym\", \"hotel room\", \"kitchen\", \"laundry room\", \"library\", \"living room\", \"lobby\", \"locker room\", \"loft\", \"lounge\", \"mailroom\", \"map room\", \"motel room\", \"mud room\", \"newsroom\", \"nursery\", \"office\", \"panic room\", \"pantry\", \"parlor\", \"playroom\", \"pool room\", \"print room\", \"rec room\", \"salon\", \"sauna\", \"schoolroom\", \"showroom\", \"sitting room\", \"staff room\", \"stockroom\", \"storm cellar\", \"studio\", \"study\", \"sunroom\", \"tearoom\", \"throne room\", \"transmission control room\", \"tv room\", \"utility room\", \"waiting room\", \"washroom\", \"water closet\", \"weight room\", \"wine cellar\", \"wiring closet\", \"workshop\"]\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"List of named HTML colors\",\n\t\t\"colors\": [{\n\t\t\t\"color\": \"AliceBlue\",\n\t\t\t\"hex\": \"#F0F8FF\"\n\t\t}, {\n\t\t\t\"color\": \"AntiqueWhite\",\n\t\t\t\"hex\": \"#FAEBD7\"\n\t\t}, {\n\t\t\t\"color\": \"Aqua\",\n\t\t\t\"hex\": \"#00FFFF\"\n\t\t}, {\n\t\t\t\"color\": \"Aquamarine\",\n\t\t\t\"hex\": \"#7FFFD4\"\n\t\t}, {\n\t\t\t\"color\": \"Azure\",\n\t\t\t\"hex\": \"#F0FFFF\"\n\t\t}, {\n\t\t\t\"color\": \"Beige\",\n\t\t\t\"hex\": \"#F5F5DC\"\n\t\t}, {\n\t\t\t\"color\": \"Bisque\",\n\t\t\t\"hex\": \"#FFE4C4\"\n\t\t}, {\n\t\t\t\"color\": \"Black\",\n\t\t\t\"hex\": \"#000000\"\n\t\t}, {\n\t\t\t\"color\": \"BlanchedAlmond\",\n\t\t\t\"hex\": \"#FFEBCD\"\n\t\t}, {\n\t\t\t\"color\": \"Blue\",\n\t\t\t\"hex\": \"#0000FF\"\n\t\t}, {\n\t\t\t\"color\": \"BlueViolet\",\n\t\t\t\"hex\": \"#8A2BE2\"\n\t\t}, {\n\t\t\t\"color\": \"Brown\",\n\t\t\t\"hex\": \"#A52A2A\"\n\t\t}, {\n\t\t\t\"color\": \"BurlyWood\",\n\t\t\t\"hex\": \"#DEB887\"\n\t\t}, {\n\t\t\t\"color\": \"CadetBlue\",\n\t\t\t\"hex\": \"#5F9EA0\"\n\t\t}, {\n\t\t\t\"color\": \"Chartreuse\",\n\t\t\t\"hex\": \"#7FFF00\"\n\t\t}, {\n\t\t\t\"color\": \"Chocolate\",\n\t\t\t\"hex\": \"#D2691E\"\n\t\t}, {\n\t\t\t\"color\": \"Coral\",\n\t\t\t\"hex\": \"#FF7F50\"\n\t\t}, {\n\t\t\t\"color\": \"CornflowerBlue\",\n\t\t\t\"hex\": \"#6495ED\"\n\t\t}, {\n\t\t\t\"color\": \"Cornsilk\",\n\t\t\t\"hex\": \"#FFF8DC\"\n\t\t}, {\n\t\t\t\"color\": \"Crimson\",\n\t\t\t\"hex\": \"#DC143C\"\n\t\t}, {\n\t\t\t\"color\": \"Cyan\",\n\t\t\t\"hex\": \"#00FFFF\"\n\t\t}, {\n\t\t\t\"color\": \"DarkBlue\",\n\t\t\t\"hex\": \"#00008B\"\n\t\t}, {\n\t\t\t\"color\": \"DarkCyan\",\n\t\t\t\"hex\": \"#008B8B\"\n\t\t}, {\n\t\t\t\"color\": \"DarkGoldenRod\",\n\t\t\t\"hex\": \"#B8860B\"\n\t\t}, {\n\t\t\t\"color\": \"DarkGray\",\n\t\t\t\"hex\": \"#A9A9A9\"\n\t\t}, {\n\t\t\t\"color\": \"DarkGreen\",\n\t\t\t\"hex\": \"#006400\"\n\t\t}, {\n\t\t\t\"color\": \"DarkKhaki\",\n\t\t\t\"hex\": \"#BDB76B\"\n\t\t}, {\n\t\t\t\"color\": \"DarkMagenta\",\n\t\t\t\"hex\": \"#8B008B\"\n\t\t}, {\n\t\t\t\"color\": \"DarkOliveGreen\",\n\t\t\t\"hex\": \"#556B2F\"\n\t\t}, {\n\t\t\t\"color\": \"DarkOrange\",\n\t\t\t\"hex\": \"#FF8C00\"\n\t\t}, {\n\t\t\t\"color\": \"DarkOrchid\",\n\t\t\t\"hex\": \"#9932CC\"\n\t\t}, {\n\t\t\t\"color\": \"DarkRed\",\n\t\t\t\"hex\": \"#8B0000\"\n\t\t}, {\n\t\t\t\"color\": \"DarkSalmon\",\n\t\t\t\"hex\": \"#E9967A\"\n\t\t}, {\n\t\t\t\"color\": \"DarkSeaGreen\",\n\t\t\t\"hex\": \"#8FBC8F\"\n\t\t}, {\n\t\t\t\"color\": \"DarkSlateBlue\",\n\t\t\t\"hex\": \"#483D8B\"\n\t\t}, {\n\t\t\t\"color\": \"DarkSlateGray\",\n\t\t\t\"hex\": \"#2F4F4F\"\n\t\t}, {\n\t\t\t\"color\": \"DarkTurquoise\",\n\t\t\t\"hex\": \"#00CED1\"\n\t\t}, {\n\t\t\t\"color\": \"DarkViolet\",\n\t\t\t\"hex\": \"#9400D3\"\n\t\t}, {\n\t\t\t\"color\": \"DeepPink\",\n\t\t\t\"hex\": \"#FF1493\"\n\t\t}, {\n\t\t\t\"color\": \"DeepSkyBlue\",\n\t\t\t\"hex\": \"#00BFFF\"\n\t\t}, {\n\t\t\t\"color\": \"DimGray\",\n\t\t\t\"hex\": \"#696969\"\n\t\t}, {\n\t\t\t\"color\": \"DodgerBlue\",\n\t\t\t\"hex\": \"#1E90FF\"\n\t\t}, {\n\t\t\t\"color\": \"FireBrick\",\n\t\t\t\"hex\": \"#B22222\"\n\t\t}, {\n\t\t\t\"color\": \"FloralWhite\",\n\t\t\t\"hex\": \"#FFFAF0\"\n\t\t}, {\n\t\t\t\"color\": \"ForestGreen\",\n\t\t\t\"hex\": \"#228B22\"\n\t\t}, {\n\t\t\t\"color\": \"Fuchsia\",\n\t\t\t\"hex\": \"#FF00FF\"\n\t\t}, {\n\t\t\t\"color\": \"Gainsboro\",\n\t\t\t\"hex\": \"#DCDCDC\"\n\t\t}, {\n\t\t\t\"color\": \"GhostWhite\",\n\t\t\t\"hex\": \"#F8F8FF\"\n\t\t}, {\n\t\t\t\"color\": \"Gold\",\n\t\t\t\"hex\": \"#FFD700\"\n\t\t}, {\n\t\t\t\"color\": \"GoldenRod\",\n\t\t\t\"hex\": \"#DAA520\"\n\t\t}, {\n\t\t\t\"color\": \"Gray\",\n\t\t\t\"hex\": \"#808080\"\n\t\t}, {\n\t\t\t\"color\": \"Green\",\n\t\t\t\"hex\": \"#008000\"\n\t\t}, {\n\t\t\t\"color\": \"GreenYellow\",\n\t\t\t\"hex\": \"#ADFF2F\"\n\t\t}, {\n\t\t\t\"color\": \"HoneyDew\",\n\t\t\t\"hex\": \"#F0FFF0\"\n\t\t}, {\n\t\t\t\"color\": \"HotPink\",\n\t\t\t\"hex\": \"#FF69B4\"\n\t\t}, {\n\t\t\t\"color\": \"IndianRed \",\n\t\t\t\"hex\": \"#CD5C5C\"\n\t\t}, {\n\t\t\t\"color\": \"Indigo \",\n\t\t\t\"hex\": \"#4B0082\"\n\t\t}, {\n\t\t\t\"color\": \"Ivory\",\n\t\t\t\"hex\": \"#FFFFF0\"\n\t\t}, {\n\t\t\t\"color\": \"Khaki\",\n\t\t\t\"hex\": \"#F0E68C\"\n\t\t}, {\n\t\t\t\"color\": \"Lavender\",\n\t\t\t\"hex\": \"#E6E6FA\"\n\t\t}, {\n\t\t\t\"color\": \"LavenderBlush\",\n\t\t\t\"hex\": \"#FFF0F5\"\n\t\t}, {\n\t\t\t\"color\": \"LawnGreen\",\n\t\t\t\"hex\": \"#7CFC00\"\n\t\t}, {\n\t\t\t\"color\": \"LemonChiffon\",\n\t\t\t\"hex\": \"#FFFACD\"\n\t\t}, {\n\t\t\t\"color\": \"LightBlue\",\n\t\t\t\"hex\": \"#ADD8E6\"\n\t\t}, {\n\t\t\t\"color\": \"LightCoral\",\n\t\t\t\"hex\": \"#F08080\"\n\t\t}, {\n\t\t\t\"color\": \"LightCyan\",\n\t\t\t\"hex\": \"#E0FFFF\"\n\t\t}, {\n\t\t\t\"color\": \"LightGoldenRodYellow\",\n\t\t\t\"hex\": \"#FAFAD2\"\n\t\t}, {\n\t\t\t\"color\": \"LightGray\",\n\t\t\t\"hex\": \"#D3D3D3\"\n\t\t}, {\n\t\t\t\"color\": \"LightGreen\",\n\t\t\t\"hex\": \"#90EE90\"\n\t\t}, {\n\t\t\t\"color\": \"LightPink\",\n\t\t\t\"hex\": \"#FFB6C1\"\n\t\t}, {\n\t\t\t\"color\": \"LightSalmon\",\n\t\t\t\"hex\": \"#FFA07A\"\n\t\t}, {\n\t\t\t\"color\": \"LightSeaGreen\",\n\t\t\t\"hex\": \"#20B2AA\"\n\t\t}, {\n\t\t\t\"color\": \"LightSkyBlue\",\n\t\t\t\"hex\": \"#87CEFA\"\n\t\t}, {\n\t\t\t\"color\": \"LightSlateGray\",\n\t\t\t\"hex\": \"#778899\"\n\t\t}, {\n\t\t\t\"color\": \"LightSteelBlue\",\n\t\t\t\"hex\": \"#B0C4DE\"\n\t\t}, {\n\t\t\t\"color\": \"LightYellow\",\n\t\t\t\"hex\": \"#FFFFE0\"\n\t\t}, {\n\t\t\t\"color\": \"Lime\",\n\t\t\t\"hex\": \"#00FF00\"\n\t\t}, {\n\t\t\t\"color\": \"LimeGreen\",\n\t\t\t\"hex\": \"#32CD32\"\n\t\t}, {\n\t\t\t\"color\": \"Linen\",\n\t\t\t\"hex\": \"#FAF0E6\"\n\t\t}, {\n\t\t\t\"color\": \"Magenta\",\n\t\t\t\"hex\": \"#FF00FF\"\n\t\t}, {\n\t\t\t\"color\": \"Maroon\",\n\t\t\t\"hex\": \"#800000\"\n\t\t}, {\n\t\t\t\"color\": \"MediumAquaMarine\",\n\t\t\t\"hex\": \"#66CDAA\"\n\t\t}, {\n\t\t\t\"color\": \"MediumBlue\",\n\t\t\t\"hex\": \"#0000CD\"\n\t\t}, {\n\t\t\t\"color\": \"MediumOrchid\",\n\t\t\t\"hex\": \"#BA55D3\"\n\t\t}, {\n\t\t\t\"color\": \"MediumPurple\",\n\t\t\t\"hex\": \"#9370DB\"\n\t\t}, {\n\t\t\t\"color\": \"MediumSeaGreen\",\n\t\t\t\"hex\": \"#3CB371\"\n\t\t}, {\n\t\t\t\"color\": \"MediumSlateBlue\",\n\t\t\t\"hex\": \"#7B68EE\"\n\t\t}, {\n\t\t\t\"color\": \"MediumSpringGreen\",\n\t\t\t\"hex\": \"#00FA9A\"\n\t\t}, {\n\t\t\t\"color\": \"MediumTurquoise\",\n\t\t\t\"hex\": \"#48D1CC\"\n\t\t}, {\n\t\t\t\"color\": \"MediumVioletRed\",\n\t\t\t\"hex\": \"#C71585\"\n\t\t}, {\n\t\t\t\"color\": \"MidnightBlue\",\n\t\t\t\"hex\": \"#191970\"\n\t\t}, {\n\t\t\t\"color\": \"MintCream\",\n\t\t\t\"hex\": \"#F5FFFA\"\n\t\t}, {\n\t\t\t\"color\": \"MistyRose\",\n\t\t\t\"hex\": \"#FFE4E1\"\n\t\t}, {\n\t\t\t\"color\": \"Moccasin\",\n\t\t\t\"hex\": \"#FFE4B5\"\n\t\t}, {\n\t\t\t\"color\": \"NavajoWhite\",\n\t\t\t\"hex\": \"#FFDEAD\"\n\t\t}, {\n\t\t\t\"color\": \"Navy\",\n\t\t\t\"hex\": \"#000080\"\n\t\t}, {\n\t\t\t\"color\": \"OldLace\",\n\t\t\t\"hex\": \"#FDF5E6\"\n\t\t}, {\n\t\t\t\"color\": \"Olive\",\n\t\t\t\"hex\": \"#808000\"\n\t\t}, {\n\t\t\t\"color\": \"OliveDrab\",\n\t\t\t\"hex\": \"#6B8E23\"\n\t\t}, {\n\t\t\t\"color\": \"Orange\",\n\t\t\t\"hex\": \"#FFA500\"\n\t\t}, {\n\t\t\t\"color\": \"OrangeRed\",\n\t\t\t\"hex\": \"#FF4500\"\n\t\t}, {\n\t\t\t\"color\": \"Orchid\",\n\t\t\t\"hex\": \"#DA70D6\"\n\t\t}, {\n\t\t\t\"color\": \"PaleGoldenRod\",\n\t\t\t\"hex\": \"#EEE8AA\"\n\t\t}, {\n\t\t\t\"color\": \"PaleGreen\",\n\t\t\t\"hex\": \"#98FB98\"\n\t\t}, {\n\t\t\t\"color\": \"PaleTurquoise\",\n\t\t\t\"hex\": \"#AFEEEE\"\n\t\t}, {\n\t\t\t\"color\": \"PaleVioletRed\",\n\t\t\t\"hex\": \"#DB7093\"\n\t\t}, {\n\t\t\t\"color\": \"PapayaWhip\",\n\t\t\t\"hex\": \"#FFEFD5\"\n\t\t}, {\n\t\t\t\"color\": \"PeachPuff\",\n\t\t\t\"hex\": \"#FFDAB9\"\n\t\t}, {\n\t\t\t\"color\": \"Peru\",\n\t\t\t\"hex\": \"#CD853F\"\n\t\t}, {\n\t\t\t\"color\": \"Pink\",\n\t\t\t\"hex\": \"#FFC0CB\"\n\t\t}, {\n\t\t\t\"color\": \"Plum\",\n\t\t\t\"hex\": \"#DDA0DD\"\n\t\t}, {\n\t\t\t\"color\": \"PowderBlue\",\n\t\t\t\"hex\": \"#B0E0E6\"\n\t\t}, {\n\t\t\t\"color\": \"Purple\",\n\t\t\t\"hex\": \"#800080\"\n\t\t}, {\n\t\t\t\"color\": \"Red\",\n\t\t\t\"hex\": \"#FF0000\"\n\t\t}, {\n\t\t\t\"color\": \"RosyBrown\",\n\t\t\t\"hex\": \"#BC8F8F\"\n\t\t}, {\n\t\t\t\"color\": \"RoyalBlue\",\n\t\t\t\"hex\": \"#4169E1\"\n\t\t}, {\n\t\t\t\"color\": \"SaddleBrown\",\n\t\t\t\"hex\": \"#8B4513\"\n\t\t}, {\n\t\t\t\"color\": \"Salmon\",\n\t\t\t\"hex\": \"#FA8072\"\n\t\t}, {\n\t\t\t\"color\": \"SandyBrown\",\n\t\t\t\"hex\": \"#F4A460\"\n\t\t}, {\n\t\t\t\"color\": \"SeaGreen\",\n\t\t\t\"hex\": \"#2E8B57\"\n\t\t}, {\n\t\t\t\"color\": \"SeaShell\",\n\t\t\t\"hex\": \"#FFF5EE\"\n\t\t}, {\n\t\t\t\"color\": \"Sienna\",\n\t\t\t\"hex\": \"#A0522D\"\n\t\t}, {\n\t\t\t\"color\": \"Silver\",\n\t\t\t\"hex\": \"#C0C0C0\"\n\t\t}, {\n\t\t\t\"color\": \"SkyBlue\",\n\t\t\t\"hex\": \"#87CEEB\"\n\t\t}, {\n\t\t\t\"color\": \"SlateBlue\",\n\t\t\t\"hex\": \"#6A5ACD\"\n\t\t}, {\n\t\t\t\"color\": \"SlateGray\",\n\t\t\t\"hex\": \"#708090\"\n\t\t}, {\n\t\t\t\"color\": \"Snow\",\n\t\t\t\"hex\": \"#FFFAFA\"\n\t\t}, {\n\t\t\t\"color\": \"SpringGreen\",\n\t\t\t\"hex\": \"#00FF7F\"\n\t\t}, {\n\t\t\t\"color\": \"SteelBlue\",\n\t\t\t\"hex\": \"#4682B4\"\n\t\t}, {\n\t\t\t\"color\": \"Tan\",\n\t\t\t\"hex\": \"#D2B48C\"\n\t\t}, {\n\t\t\t\"color\": \"Teal\",\n\t\t\t\"hex\": \"#008080\"\n\t\t}, {\n\t\t\t\"color\": \"Thistle\",\n\t\t\t\"hex\": \"#D8BFD8\"\n\t\t}, {\n\t\t\t\"color\": \"Tomato\",\n\t\t\t\"hex\": \"#FF6347\"\n\t\t}, {\n\t\t\t\"color\": \"Turquoise\",\n\t\t\t\"hex\": \"#40E0D0\"\n\t\t}, {\n\t\t\t\"color\": \"Violet\",\n\t\t\t\"hex\": \"#EE82EE\"\n\t\t}, {\n\t\t\t\"color\": \"Wheat\",\n\t\t\t\"hex\": \"#F5DEB3\"\n\t\t}, {\n\t\t\t\"color\": \"White\",\n\t\t\t\"hex\": \"#FFFFFF\"\n\t\t}, {\n\t\t\t\"color\": \"WhiteSmoke\",\n\t\t\t\"hex\": \"#F5F5F5\"\n\t\t}, {\n\t\t\t\"color\": \"Yellow\",\n\t\t\t\"hex\": \"#FFFF00\"\n\t\t}, {\n\t\t\t\"color\": \"YellowGreen\",\n\t\t\t\"hex\": \"#9ACD32\"\n\t\t}]\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"A list of vegetables.\",\n\t\t\"vegetables\": [\"acorn squash\", \"alfalfa sprout\", \"amaranth\", \"anise\", \"artichoke\", \"arugula\", \"asparagus\", \"aubergine\", \"azuki bean\", \"banana squash\", \"basil\", \"bean sprout\", \"beet\", \"black bean\", \"black-eyed pea\", \"bok choy\", \"borlotti bean\", \"broad beans\", \"broccoflower\", \"broccoli\", \"brussels sprout\", \"butternut squash\", \"cabbage\", \"calabrese\", \"caraway\", \"carrot\", \"cauliflower\", \"cayenne pepper\", \"celeriac\", \"celery\", \"chamomile\", \"chard\", \"chayote\", \"chickpea\", \"chives\", \"cilantro\", \"collard green\", \"corn\", \"corn salad\", \"courgette\", \"cucumber\", \"daikon\", \"delicata\", \"dill\", \"eggplant\", \"endive\", \"fennel\", \"fiddlehead\", \"frisee\", \"garlic\", \"gem squash\", \"ginger\", \"green bean\", \"green pepper\", \"habanero\", \"herbs and spice\", \"horseradish\", \"hubbard squash\", \"jalapeno\", \"jerusalem artichoke\", \"jicama\", \"kale\", \"kidney bean\", \"kohlrabi\", \"lavender\", \"leek \", \"legume\", \"lemon grass\", \"lentils\", \"lettuce\", \"lima bean\", \"mamey\", \"mangetout\", \"marjoram\", \"mung bean\", \"mushrooms\", \"mustard green\", \"navy bean\", \"nettles\", \"new zealand spinach\", \"nopale\", \"okra\", \"onion\", \"oregano\", \"paprika\", \"parsley\", \"parsnip\", \"patty pan\", \"peas\", \"pinto bean\", \"potato\", \"pumpkin\", \"radicchio\", \"radish\", \"rhubarb\", \"rosemary\", \"runner bean\", \"rutabaga\", \"sage\", \"scallion\", \"shallot\", \"skirret\", \"snap pea\", \"soy bean\", \"spaghetti squash\", \"spinach\", \"squash \", \"sweet potato\", \"tabasco pepper\", \"taro\", \"tat soi\", \"thyme\", \"tomato\", \"topinambur\", \"tubers\", \"turnip\", \"wasabi\", \"water chestnut\", \"watercress\", \"white radish\", \"yam\", \"zucchini\"]\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"metals\",\n\t\t\"metals\": [\"actinium\", \"aluminium\", \"americium\", \"barium\", \"berkelium\", \"beryllium\", \"bismuth\", \"bohrium\", \"cadmium\", \"calcium\", \"californium\", \"cerium\", \"cesium\", \"chromium\", \"cobalt\", \"copper\", \"curium\", \"darmstadtium\", \"dubnium\", \"dysprosium\", \"einsteinium\", \"erbium\", \"europium\", \"fermium\", \"francium\", \"gadolinium\", \"gallium\", \"gold\", \"hafnium\", \"hassium\", \"holmium\", \"indium\", \"iridium\", \"iron\", \"lanthanum\", \"lawrencium\", \"lead\", \"lithium\", \"lutetium\", \"magnesium\", \"manganese\", \"meitnerium\", \"mendelevium\", \"mercury\", \"molybdenum\", \"neodymium\", \"neptunium\", \"nickel\", \"niobium\", \"nobelium\", \"osmium\", \"palladium\", \"platinum\", \"plutonium\", \"polonium\", \"potassium\", \"praseodymium\", \"promethium\", \"protactinium\", \"radium\", \"rhenium\", \"rhodium\", \"roentgenium\", \"rubidium\", \"ruthenium\", \"rutherfordium\", \"samarium\", \"scandium\", \"seaborgium\", \"silver\", \"sodium\", \"strontium\", \"tantalum\", \"technetium\", \"terbium\", \"thallium\", \"thorium\", \"thulium\", \"tin\", \"titanium\", \"tungsten\", \"ununbium\", \"ununhexium\", \"ununpentium\", \"ununquadium\", \"ununtrium\", \"uranium\", \"vanadium\", \"ytterbium\", \"yttrium\", \"zinc\", \"zirconium\"]\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"A list of monsters and other mythic creatures\",\n\t\t\"sources\": \"some from https://en.wikipedia.org/wiki/Mythic_humanoids, others from memory.\",\n\t\t\"names\": [\"angel\", \"brownie\", \"bugbear\", \"centaur\", \"chimera\", \"chupacabra\", \"cockatrice\", \"cyclops\", \"demon\", \"djinn\", \"dragon\", \"draugr\", \"dryad\", \"dwarf\", \"elemental\", \"elf\", \"fairy\", \"faun\", \"frost giant\", \"gargoyle\", \"genie\", \"ghast\", \"ghost\", \"ghoul\", \"giant\", \"gnome\", \"goblin\", \"golem\", \"gorgon\", \"gremlin\", \"griffon\", \"hag\", \"harpy\", \"hippogriff\", \"hobgoblin\", \"homonculus\", \"hydra\", \"imp\", \"incubus\", \"kappa\", \"kobold\", \"kraken\", \"lamassu\", \"leprechaun\", \"lich\", \"manticore\", \"mermaid\", \"merman\", \"minotaur\", \"mummy\", \"naga\", \"nix\", \"nymph\", \"ogre\", \"oni\", \"orc\", \"pegasus\", \"phoenix\", \"pixie\", \"poltergeist\", \"roc\", \"sasquatch\", \"satyr\", \"selkie\", \"siren\", \"spectre\", \"sphinx\", \"sprite\", \"succubus\", \"sylph\", \"thunderbird\", \"troll\", \"unicorn\", \"vampire\", \"valkyrie\", \"warg\", \"wendigo\", \"werewolf\", \"wight\", \"witch\", \"wraith\", \"wyvern\", \"yeti\", \"zombie\"]\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"flowers\": [\"anemone\", \"amaryllis\", \"amaranth\", \"aster\", \"azalea\", \"babys breath\", \"begonia\", \"bellflower\", \"bergamot\", \"bird of paradise\", \"bluebell\", \"bottlebrush\", \"buttercup\", \"camellias\", \"carnation\", \"chrysantemum\", \"columbine\", \"clover\", \"crocus\", \"daisy\", \"dahlia\", \"daffodil\", \"delphinium\", \"edelweiss\", \"primrose\", \"forget me not\", \"foxglove\", \"freesia\", \"gerbera daisy\", \"gladiolus\", \"hibiscus\", \"heather\", \"hyacinth\", \"holly\", \"iris\", \"jasmine\", \"ladys slipper\", \"lavender\", \"lilac\", \"lily\", \"lotus flower\", \"marigold\", \"marjoram\", \"mimosa\", \"narcissus\", \"orange blossom\", \"orchid\", \"peach blossom\", \"peony\", \"petunia\", \"rhododendron\", \"rosemary\", \"roses\", \"sage\", \"snapdragon\", \"sunflower\", \"tansy\", \"thistle\", \"thyme\", \"tulip\", \"violet\", \"water lily\", \"zinnia\"]\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"A list of home appliances\",\n\t\t\"appliances\": [\"air conditioner\", \"air fryer\", \"air ioniser\", \"aroma lamp\", \"attic fan\", \"bachelor griller\", \"back boiler\", \"barbecue\", \"beehive oven\", \"beverage opener\", \"boiler\", \"bread machine\", \"butane torch\", \"can opener\", \"ceiling fan\", \"central vacuum cleaner\", \"clothes dryer\", \"clothes iron\", \"coffee percolator\", \"coffeemaker\", \"combo washer dryer\", \"compactor\", \"convection heater\", \"convection microwave\", \"convection oven\", \"corn roaster\", \"crepe maker\", \"deep fryer\", \"dehumidifier\", \"dishwasher\", \"earth oven\", \"electric cooker\", \"electric water boiler\", \"embroidery machine\", \"energy regulator\", \"espresso machine\", \"fan heater\", \"field kitchen\", \"fire pot\", \"fireplace toaster\", \"flame supervision device\", \"flattop grill\", \"food steamer\", \"garbage disposal unit\", \"hair dryer\", \"hair iron\", \"halogen oven\", \"home server\", \"hot plate\", \"humidifier\", \"HVAC\", \"icebox\", \"instant hot water dispenser\", \"internet refrigerator\", \"kettle\", \"kimchi refrigerator\", \"kitchener range\", \"micathermic heater\", \"microwave oven\", \"mousetrap\", \"oil heater\", \"oven\", \"panini sandwich grill\", \"patio heater\", \"pneumatic vacuum\", \"popcorn maker\", \"pressure cooker\", \"pressure fryer\", \"radiator\", \"reflector oven\", \"refrigerator\", \"rice cooker\", \"rice polisher\", \"robotic vacuum cleaner\", \"rotisserie\", \"sandwich toaster\", \"self-cleaning oven\", \"set-n-forget cooker\", \"sewing machine\", \"slow cooker\", \"solar cooker\", \"sous-vide cooker\", \"soy milk maker\", \"stove\", \"sump pump\", \"susceptor\", \"swamp cooler\", \"tandoor\", \"thermal immersion circulator\", \"thermal mass refrigerator\", \"tie press\", \"toaster\", \"toaster oven\", \"trivet\", \"trouser press\", \"turkey fryer\", \"vacuum cleaner\", \"vacuum fryer\", \"vaporizer\", \"waffle iron\", \"washing machine\", \"water cooker\", \"water cooler\", \"water heater\", \"wet grinder\", \"window fan\", \"wood-fired oven\"]\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t\t\"description\": \"A list of English adjectives.\",\n\t\t\"adjs\": [\"Aristotelian\", \"Arthurian\", \"Bohemian\", \"Brethren\", \"Mosaic\", \"Oceanic\", \"Proctor\", \"Terran\", \"Tudor\", \"abroad\", \"absorbing\", \"abstract\", \"academic\", \"accelerated\", \"accented\", \"accountant\", \"acquainted\", \"acute\", \"addicting\", \"addictive\", \"adjustable\", \"admired\", \"adult\", \"adverse\", \"advised\", \"aerosol\", \"afraid\", \"aggravated\", \"aggressive\", \"agreeable\", \"alienate\", \"aligned\", \"all-round\", \"alleged\", \"almond\", \"alright\", \"altruistic\", \"ambient\", \"ambivalent\", \"amiable\", \"amino\", \"amorphous\", \"amused\", \"anatomical\", \"ancestral\", \"angelic\", \"angrier\", \"answerable\", \"antiquarian\", \"antiretroviral\", \"appellate\", \"applicable\", \"apportioned\", \"approachable\", \"appropriated\", \"archer\", \"aroused\", \"arrested\", \"assertive\", \"assigned\", \"athletic\", \"atrocious\", \"attained\", \"authoritarian\", \"autobiographical\", \"avaricious\", \"avocado\", \"awake\", \"awsome\", \"backstage\", \"backwoods\", \"balding\", \"bandaged\", \"banded\", \"banned\", \"barreled\", \"battle\", \"beaten\", \"begotten\", \"beguiled\", \"bellied\", \"belted\", \"beneficent\", \"besieged\", \"betting\", \"big-money\", \"biggest\", \"biochemical\", \"bipolar\", \"blackened\", \"blame\", \"blessed\", \"blindfolded\", \"bloat\", \"blocked\", \"blooded\", \"blue-collar\", \"blushing\", \"boastful\", \"bolder\", \"bolstered\", \"bonnie\", \"bored\", \"boundary\", \"bounded\", \"bounding\", \"branched\", \"brawling\", \"brazen\", \"breeding\", \"bridged\", \"brimming\", \"brimstone\", \"broadest\", \"broiled\", \"broker\", \"bronze\", \"bruising\", \"buffy\", \"bullied\", \"bungling\", \"burial\", \"buttery\", \"candied\", \"canonical\", \"cantankerous\", \"cardinal\", \"carefree\", \"caretaker\", \"casual\", \"cathartic\", \"causal\", \"chapel\", \"characterized\", \"charcoal\", \"cheeky\", \"cherished\", \"chipotle\", \"chirping\", \"chivalrous\", \"circumstantial\", \"civic\", \"civil\", \"civilised\", \"clanking\", \"clapping\", \"claptrap\", \"classless\", \"cleansed\", \"cleric\", \"cloistered\", \"codified\", \"colloquial\", \"colour\", \"combat\", \"combined\", \"comely\", \"commissioned\", \"commonplace\", \"commuter\", \"commuting\", \"comparable\", \"complementary\", \"compromising\", \"conceding\", \"concentrated\", \"conceptual\", \"conditioned\", \"confederate\", \"confident\", \"confidential\", \"confining\", \"confuse\", \"congressional\", \"consequential\", \"conservative\", \"constituent\", \"contaminated\", \"contemporaneous\", \"contraceptive\", \"convertible\", \"convex\", \"cooked\", \"coronary\", \"corporatist\", \"correlated\", \"corroborated\", \"cosmic\", \"cover\", \"crash\", \"crypto\", \"culminate\", \"cushioned\", \"dandy\", \"dashing\", \"dazzled\", \"decreased\", \"decrepit\", \"dedicated\", \"defaced\", \"defective\", \"defenseless\", \"deluded\", \"deodorant\", \"departed\", \"depress\", \"designing\", \"despairing\", \"destitute\", \"detective\", \"determined\", \"devastating\", \"deviant\", \"devilish\", \"devoted\", \"diagonal\", \"dictated\", \"didactic\", \"differentiated\", \"diffused\", \"dirtier\", \"disabling\", \"disconnected\", \"discovered\", \"disdainful\", \"diseased\", \"disfigured\", \"disheartened\", \"disheveled\", \"disillusioned\", \"disparate\", \"dissident\", \"doable\", \"doctrinal\", \"doing\", \"dotted\", \"double-blind\", \"downbeat\", \"dozen\", \"draining\", \"draught\", \"dread\", \"dried\", \"dropped\", \"dulled\", \"duplicate\", \"eaten\", \"echoing\", \"economical\", \"elaborated\", \"elastic\", \"elective\", \"electoral\", \"elven\", \"embryo\", \"emerald\", \"emergency\", \"emissary\", \"emotional\", \"employed\", \"enamel\", \"encased\", \"encrusted\", \"endangered\", \"engraved\", \"engrossing\", \"enlarged\", \"enlisted\", \"enlivened\", \"ensconced\", \"entangled\", \"enthralling\", \"entire\", \"envious\", \"eradicated\", \"eroded\", \"esoteric\", \"essential\", \"evaporated\", \"ever-present\", \"evergreen\", \"everlasting\", \"exacting\", \"exasperated\", \"excess\", \"exciting\", \"executable\", \"existent\", \"exonerated\", \"exorbitant\", \"exponential\", \"export\", \"extraordinary\", \"exultant\", \"exulting\", \"facsimile\", \"fading\", \"fainter\", \"faith-based\", \"fallacious\", \"faltering\", \"famous\", \"fancier\", \"fast-growing\", \"fated\", \"favourable\", \"fearless\", \"feathered\", \"fellow\", \"fermented\", \"ferocious\", \"fiddling\", \"filling\", \"firmer\", \"fitted\", \"flammable\", \"flawed\", \"fledgling\", \"fleshy\", \"flexible\", \"flickering\", \"floral\", \"flowering\", \"flowing\", \"foggy\", \"folic\", \"foolhardy\", \"foolish\", \"footy\", \"forehand\", \"forked\", \"formative\", \"formulaic\", \"foul-mouthed\", \"fractional\", \"fragrant\", \"fraudulent\", \"freakish\", \"freckled\", \"freelance\", \"freight\", \"fresh\", \"fretted\", \"frugal\", \"fulfilling\", \"fuming\", \"funded\", \"funny\", \"garbled\", \"gathered\", \"geologic\", \"geometric\", \"gibberish\", \"gilded\", \"ginger\", \"glare\", \"glaring\", \"gleaming\", \"glorified\", \"glorious\", \"goalless\", \"gold-plated\", \"goody\", \"grammatical\", \"grande\", \"grateful\", \"gratuitous\", \"graven\", \"greener\", \"grinding\", \"grizzly\", \"groaning\", \"grudging\", \"guaranteed\", \"gusty\", \"gypsy\", \"half-breed\", \"hand-held\", \"handheld\", \"hands-off\", \"hard-pressed\", \"harlot\", \"healing\", \"healthier\", \"healthiest\", \"heart\", \"heart-shaped\", \"heathen\", \"hedonistic\", \"heralded\", \"herbal\", \"high-density\", \"high-performance\", \"high-res\", \"high-yield\", \"hissy\", \"hitless\", \"holiness\", \"homesick\", \"honorable\", \"hooded\", \"hopeless\", \"horrendous\", \"horrible\", \"hot-button\", \"huddled\", \"human\", \"humbling\", \"humid\", \"humiliating\", \"hypnotized\", \"idealistic\", \"idiosyncratic\", \"ignited\", \"illustrated\", \"illustrative\", \"imitated\", \"immense\", \"immersive\", \"immigrant\", \"immoral\", \"impassive\", \"impressionable\", \"improbable\", \"impulsive\", \"in-between\", \"in-flight\", \"inattentive\", \"inbound\", \"inbounds\", \"incalculable\", \"incomprehensible\", \"indefatigable\", \"indigo\", \"indiscriminate\", \"indomitable\", \"inert\", \"inflate\", \"inform\", \"inheriting\", \"injured\", \"injurious\", \"inking\", \"inoffensive\", \"insane\", \"insensible\", \"insidious\", \"insincere\", \"insistent\", \"insolent\", \"insufferable\", \"intemperate\", \"interdependent\", \"interesting\", \"interfering\", \"intern\", \"interpreted\", \"intersecting\", \"intolerable\", \"intolerant\", \"intuitive\", \"irresolute\", \"irritate\", \"jealous\", \"jerking\", \"joining\", \"joint\", \"journalistic\", \"joyful\", \"keyed\", \"knowing\", \"lacklustre\", \"laden\", \"lagging\", \"lamented\", \"laughable\", \"layered\", \"leather\", \"leathern\", \"leery\", \"left-footed\", \"legible\", \"leisure\", \"lessening\", \"liberating\", \"life-size\", \"lifted\", \"lightest\", \"limitless\", \"listening\", \"literary\", \"liver\", \"livid\", \"lobster\", \"locked\", \"long-held\", \"long-lasting\", \"long-running\", \"long-suffering\", \"loudest\", \"loveliest\", \"low-budget\", \"low-carb\", \"lowering\", \"lucid\", \"luckless\", \"lusty\", \"luxurious\", \"magazine\", \"maniac\", \"manmade\", \"maroon\", \"mastered\", \"mated\", \"material\", \"materialistic\", \"meaningful\", \"measuring\", \"mediaeval\", \"medical\", \"meditated\", \"medley\", \"melodic\", \"memorable\", \"memorial\", \"metabolic\", \"metallic\", \"metallurgical\", \"metering\", \"midair\", \"midterm\", \"midway\", \"mighty\", \"migrating\", \"mind-blowing\", \"mind-boggling\", \"minor\", \"mirrored\", \"misguided\", \"misshapen\", \"mitigated\", \"mixed\", \"modernized\", \"molecular\", \"monarch\", \"monastic\", \"morbid\", \"motley\", \"motorized\", \"mounted\", \"multi-million\", \"multidisciplinary\", \"muscled\", \"muscular\", \"muted\", \"mysterious\", \"mythic\", \"nail-biting\", \"natural\", \"nauseous\", \"negative\", \"networked\", \"neurological\", \"neutered\", \"newest\", \"night\", \"nitrous\", \"no-fly\", \"noncommercial\", \"nonsense\", \"north\", \"nuanced\", \"occurring\", \"offensive\", \"oldest\", \"oncoming\", \"one-eyed\", \"one-year\", \"onstage\", \"onward\", \"opaque\", \"open-ended\", \"operating\", \"opportunist\", \"opposing\", \"opt-in\", \"ordinate\", \"outdone\", \"outlaw\", \"outsized\", \"overboard\", \"overheated\", \"oversize\", \"overworked\", \"oyster\", \"paced\", \"panting\", \"paralyzed\", \"paramount\", \"parental\", \"parted\", \"partisan\", \"passive\", \"pastel\", \"patriot\", \"peacekeeping\", \"pedestrian\", \"peevish\", \"penal\", \"penned\", \"pensive\", \"perceptual\", \"perky\", \"permissible\", \"pernicious\", \"perpetuate\", \"perplexed\", \"pervasive\", \"petrochemical\", \"philosophical\", \"picturesque\", \"pillaged\", \"piped\", \"piquant\", \"pitching\", \"plausible\", \"pliable\", \"plumb\", \"politician\", \"polygamous\", \"poorest\", \"portmanteau\", \"posed\", \"positive\", \"possible\", \"postpartum\", \"prank\", \"pre-emptive\", \"precocious\", \"predicted\", \"premium\", \"preparatory\", \"prerequisite\", \"prescient\", \"preserved\", \"presidential\", \"pressed\", \"pressurized\", \"presumed\", \"prewar\", \"priced\", \"pricier\", \"primal\", \"primer\", \"primetime\", \"printed\", \"private\", \"problem\", \"procedural\", \"process\", \"prodigious\", \"professional\", \"programmed\", \"progressive\", \"prolific\", \"promising\", \"promulgated\", \"pronged\", \"proportionate\", \"protracted\", \"pulled\", \"pulsed\", \"purgatory\", \"quick\", \"rapid-fire\", \"raunchy\", \"razed\", \"reactive\", \"readable\", \"realizing\", \"recognised\", \"recovering\", \"recurrent\", \"recycled\", \"redeemable\", \"reflecting\", \"regal\", \"registering\", \"reliable\", \"reminiscent\", \"remorseless\", \"removable\", \"renewable\", \"repeating\", \"repellent\", \"reserve\", \"resigned\", \"respectful\", \"rested\", \"restrict\", \"resultant\", \"retaliatory\", \"retiring\", \"revelatory\", \"reverend\", \"reversing\", \"revolving\", \"ridiculous\", \"right-hand\", \"ringed\", \"risque\", \"robust\", \"roomful\", \"rotating\", \"roused\", \"rubber\", \"run-down\", \"running\", \"runtime\", \"rustling\", \"safest\", \"salient\", \"sanctioned\", \"saute\", \"saved\", \"scandalized\", \"scarlet\", \"scattering\", \"sceptical\", \"scheming\", \"scoundrel\", \"scratched\", \"scratchy\", \"scrolled\", \"seated\", \"second-best\", \"segregated\", \"self-taught\", \"semiautomatic\", \"senior\", \"sensed\", \"sentient\", \"sexier\", \"shadowy\", \"shaken\", \"shaker\", \"shameless\", \"shaped\", \"shiny\", \"shipped\", \"shivering\", \"shoestring\", \"short\", \"short-lived\", \"signed\", \"simplest\", \"simplistic\", \"sizable\", \"skeleton\", \"skinny\", \"skirting\", \"skyrocketed\", \"slamming\", \"slanting\", \"slapstick\", \"sleek\", \"sleepless\", \"sleepy\", \"slender\", \"slimmer\", \"smacking\", \"smokeless\", \"smothered\", \"smouldering\", \"snuff\", \"socialized\", \"solid-state\", \"sometime\", \"sought\", \"spanking\", \"sparing\", \"spattered\", \"specialized\", \"specific\", \"speedy\", \"spherical\", \"spiky\", \"spineless\", \"sprung\", \"squint\", \"stainless\", \"standing\", \"starlight\", \"startled\", \"stately\", \"statewide\", \"stereoscopic\", \"sticky\", \"stimulant\", \"stinky\", \"stoked\", \"stolen\", \"storied\", \"strained\", \"strapping\", \"strengthened\", \"stubborn\", \"stylized\", \"suave\", \"subjective\", \"subjugated\", \"subordinate\", \"succeeding\", \"suffering\", \"summary\", \"sunset\", \"sunshine\", \"supernatural\", \"supervisory\", \"supply-side\", \"surrogate\", \"suspended\", \"suspenseful\", \"swarthy\", \"sweating\", \"sweeping\", \"swinging\", \"swooning\", \"sympathize\", \"synchronized\", \"synonymous\", \"synthetic\", \"tailed\", \"tallest\", \"tangible\", \"tanked\", \"tarry\", \"technical\", \"tectonic\", \"telepathic\", \"tenderest\", \"territorial\", \"testimonial\", \"theistic\", \"thicker\", \"threatening\", \"tight-lipped\", \"timed\", \"timely\", \"timid\", \"torrent\", \"totalled\", \"tougher\", \"traditional\", \"transformed\", \"trapped\", \"traveled\", \"traverse\", \"treated\", \"trial\", \"trunk\", \"trusting\", \"trying\", \"twisted\", \"two-lane\", \"tyrannical\", \"unaided\", \"unassisted\", \"unassuming\", \"unattractive\", \"uncapped\", \"uncomfortable\", \"uncontrolled\", \"uncooked\", \"uncooperative\", \"underground\", \"undersea\", \"undisturbed\", \"unearthly\", \"uneasy\", \"unequal\", \"unfazed\", \"unfinished\", \"unforeseen\", \"unforgivable\", \"unidentified\", \"unimaginative\", \"uninspired\", \"unintended\", \"uninvited\", \"universal\", \"unmasked\", \"unorthodox\", \"unparalleled\", \"unpleasant\", \"unprincipled\", \"unread\", \"unreasonable\", \"unregulated\", \"unreliable\", \"unremitting\", \"unsafe\", \"unsanitary\", \"unsealed\", \"unsuccessful\", \"unsupervised\", \"untimely\", \"unwary\", \"unwrapped\", \"uppity\", \"upstart\", \"useless\", \"utter\", \"valiant\", \"valid\", \"valued\", \"vanilla\", \"vaulting\", \"vaunted\", \"veering\", \"vegetative\", \"vented\", \"verbal\", \"verifying\", \"veritable\", \"versed\", \"vinyl\", \"virgin\", \"visceral\", \"visual\", \"voluptuous\", \"walk-on\", \"wanton\", \"warlike\", \"washed\", \"waterproof\", \"waved\", \"weakest\", \"well-bred\", \"well-chosen\", \"well-informed\", \"wetting\", \"wheeled\", \"whirlwind\", \"widen\", \"widening\", \"willful\", \"willing\", \"winnable\", \"winningest\", \"wireless\", \"wistful\", \"woeful\", \"wooded\", \"woodland\", \"wordless\", \"workable\", \"worldly\", \"worldwide\", \"worst-case\", \"worsted\", \"worthless\"]\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global define */\n\t\n\t(function (root, pluralize) {\n\t  /* istanbul ignore else */\n\t  if (true) {\n\t    // Node.\n\t    module.exports = pluralize();\n\t  } else if (typeof define === 'function' && define.amd) {\n\t    // AMD, registers as an anonymous module.\n\t    define(function () {\n\t      return pluralize();\n\t    });\n\t  } else {\n\t    // Browser global.\n\t    root.pluralize = pluralize();\n\t  }\n\t})(this, function () {\n\t  // Rule storage - pluralize and singularize need to be run sequentially,\n\t  // while other rules can be optimized using an object for instant lookups.\n\t  var pluralRules = [];\n\t  var singularRules = [];\n\t  var uncountables = {};\n\t  var irregularPlurals = {};\n\t  var irregularSingles = {};\n\t\n\t  /**\n\t   * Title case a string.\n\t   *\n\t   * @param  {string} str\n\t   * @return {string}\n\t   */\n\t  function toTitleCase (str) {\n\t    return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n\t  }\n\t\n\t  /**\n\t   * Sanitize a pluralization rule to a usable regular expression.\n\t   *\n\t   * @param  {(RegExp|string)} rule\n\t   * @return {RegExp}\n\t   */\n\t  function sanitizeRule (rule) {\n\t    if (typeof rule === 'string') {\n\t      return new RegExp('^' + rule + '$', 'i');\n\t    }\n\t\n\t    return rule;\n\t  }\n\t\n\t  /**\n\t   * Pass in a word token to produce a function that can replicate the case on\n\t   * another word.\n\t   *\n\t   * @param  {string}   word\n\t   * @param  {string}   token\n\t   * @return {Function}\n\t   */\n\t  function restoreCase (word, token) {\n\t    // Upper cased words. E.g. \"HELLO\".\n\t    if (word === word.toUpperCase()) {\n\t      return token.toUpperCase();\n\t    }\n\t\n\t    // Title cased words. E.g. \"Title\".\n\t    if (word[0] === word[0].toUpperCase()) {\n\t      return toTitleCase(token);\n\t    }\n\t\n\t    // Lower cased words. E.g. \"test\".\n\t    return token.toLowerCase();\n\t  }\n\t\n\t  /**\n\t   * Interpolate a regexp string.\n\t   *\n\t   * @param  {string} str\n\t   * @param  {Array}  args\n\t   * @return {string}\n\t   */\n\t  function interpolate (str, args) {\n\t    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n\t      return args[index] || '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Sanitize a word by passing in the word and sanitization rules.\n\t   *\n\t   * @param  {String}   token\n\t   * @param  {String}   word\n\t   * @param  {Array}    collection\n\t   * @return {String}\n\t   */\n\t  function sanitizeWord (token, word, collection) {\n\t    // Empty string or doesn't need fixing.\n\t    if (!token.length || uncountables.hasOwnProperty(token)) {\n\t      return word;\n\t    }\n\t\n\t    var len = collection.length;\n\t\n\t    // Iterate over the sanitization rules and use the first one to match.\n\t    while (len--) {\n\t      var rule = collection[len];\n\t\n\t      // If the rule passes, return the replacement.\n\t      if (rule[0].test(word)) {\n\t        return word.replace(rule[0], function (match, index, word) {\n\t          var result = interpolate(rule[1], arguments);\n\t\n\t          if (match === '') {\n\t            return restoreCase(word[index - 1], result);\n\t          }\n\t\n\t          return restoreCase(match, result);\n\t        });\n\t      }\n\t    }\n\t\n\t    return word;\n\t  }\n\t\n\t  /**\n\t   * Replace a word with the updated word.\n\t   *\n\t   * @param  {Object}   replaceMap\n\t   * @param  {Object}   keepMap\n\t   * @param  {Array}    rules\n\t   * @return {Function}\n\t   */\n\t  function replaceWord (replaceMap, keepMap, rules) {\n\t    return function (word) {\n\t      // Get the correct token and case restoration functions.\n\t      var token = word.toLowerCase();\n\t\n\t      // Check against the keep object map.\n\t      if (keepMap.hasOwnProperty(token)) {\n\t        return restoreCase(word, token);\n\t      }\n\t\n\t      // Check against the replacement map for a direct word replacement.\n\t      if (replaceMap.hasOwnProperty(token)) {\n\t        return restoreCase(word, replaceMap[token]);\n\t      }\n\t\n\t      // Run all the rules against the word.\n\t      return sanitizeWord(token, word, rules);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Pluralize or singularize a word based on the passed in count.\n\t   *\n\t   * @param  {String}  word\n\t   * @param  {Number}  count\n\t   * @param  {Boolean} inclusive\n\t   * @return {String}\n\t   */\n\t  function pluralize (word, count, inclusive) {\n\t    var pluralized = count === 1\n\t      ? pluralize.singular(word) : pluralize.plural(word);\n\t\n\t    return (inclusive ? count + ' ' : '') + pluralized;\n\t  }\n\t\n\t  /**\n\t   * Pluralize a word.\n\t   *\n\t   * @type {Function}\n\t   */\n\t  pluralize.plural = replaceWord(\n\t    irregularSingles, irregularPlurals, pluralRules\n\t  );\n\t\n\t  /**\n\t   * Singularize a word.\n\t   *\n\t   * @type {Function}\n\t   */\n\t  pluralize.singular = replaceWord(\n\t    irregularPlurals, irregularSingles, singularRules\n\t  );\n\t\n\t  /**\n\t   * Add a pluralization rule to the collection.\n\t   *\n\t   * @param {(string|RegExp)} rule\n\t   * @param {string}          replacement\n\t   */\n\t  pluralize.addPluralRule = function (rule, replacement) {\n\t    pluralRules.push([sanitizeRule(rule), replacement]);\n\t  };\n\t\n\t  /**\n\t   * Add a singularization rule to the collection.\n\t   *\n\t   * @param {(string|RegExp)} rule\n\t   * @param {string}          replacement\n\t   */\n\t  pluralize.addSingularRule = function (rule, replacement) {\n\t    singularRules.push([sanitizeRule(rule), replacement]);\n\t  };\n\t\n\t  /**\n\t   * Add an uncountable word rule.\n\t   *\n\t   * @param {(string|RegExp)} word\n\t   */\n\t  pluralize.addUncountableRule = function (word) {\n\t    if (typeof word === 'string') {\n\t      uncountables[word.toLowerCase()] = true;\n\t      return;\n\t    }\n\t\n\t    // Set singular and plural references for the word.\n\t    pluralize.addPluralRule(word, '$0');\n\t    pluralize.addSingularRule(word, '$0');\n\t  };\n\t\n\t  /**\n\t   * Add an irregular word definition.\n\t   *\n\t   * @param {String} single\n\t   * @param {String} plural\n\t   */\n\t  pluralize.addIrregularRule = function (single, plural) {\n\t    plural = plural.toLowerCase();\n\t    single = single.toLowerCase();\n\t\n\t    irregularSingles[single] = plural;\n\t    irregularPlurals[plural] = single;\n\t  };\n\t\n\t  /**\n\t   * Irregular rules.\n\t   */\n\t  [\n\t    // Pronouns.\n\t    ['I', 'we'],\n\t    ['me', 'us'],\n\t    ['he', 'they'],\n\t    ['she', 'they'],\n\t    ['them', 'them'],\n\t    ['myself', 'ourselves'],\n\t    ['yourself', 'yourselves'],\n\t    ['itself', 'themselves'],\n\t    ['herself', 'themselves'],\n\t    ['himself', 'themselves'],\n\t    ['themself', 'themselves'],\n\t    ['is', 'are'],\n\t    ['this', 'these'],\n\t    ['that', 'those'],\n\t    // Words ending in with a consonant and `o`.\n\t    ['echo', 'echoes'],\n\t    ['dingo', 'dingoes'],\n\t    ['volcano', 'volcanoes'],\n\t    ['tornado', 'tornadoes'],\n\t    ['torpedo', 'torpedoes'],\n\t    // Ends with `us`.\n\t    ['genus', 'genera'],\n\t    ['viscus', 'viscera'],\n\t    // Ends with `ma`.\n\t    ['stigma', 'stigmata'],\n\t    ['stoma', 'stomata'],\n\t    ['dogma', 'dogmata'],\n\t    ['lemma', 'lemmata'],\n\t    ['schema', 'schemata'],\n\t    ['anathema', 'anathemata'],\n\t    // Other irregular rules.\n\t    ['ox', 'oxen'],\n\t    ['axe', 'axes'],\n\t    ['die', 'dice'],\n\t    ['yes', 'yeses'],\n\t    ['foot', 'feet'],\n\t    ['eave', 'eaves'],\n\t    ['goose', 'geese'],\n\t    ['tooth', 'teeth'],\n\t    ['quiz', 'quizzes'],\n\t    ['human', 'humans'],\n\t    ['proof', 'proofs'],\n\t    ['carve', 'carves'],\n\t    ['valve', 'valves'],\n\t    ['thief', 'thieves'],\n\t    ['genie', 'genies'],\n\t    ['groove', 'grooves'],\n\t    ['pickaxe', 'pickaxes'],\n\t    ['whiskey', 'whiskies']\n\t  ].forEach(function (rule) {\n\t    return pluralize.addIrregularRule(rule[0], rule[1]);\n\t  });\n\t\n\t  /**\n\t   * Pluralization rules.\n\t   */\n\t  [\n\t    [/s?$/i, 's'],\n\t    [/([^aeiou]ese)$/i, '$1'],\n\t    [/(ax|test)is$/i, '$1es'],\n\t    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n\t    [/(e[mn]u)s?$/i, '$1s'],\n\t    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n\t    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n\t    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n\t    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n\t    [/(her|at|gr)o$/i, '$1oes'],\n\t    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n\t    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n\t    [/sis$/i, 'ses'],\n\t    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n\t    [/([^aeiouy]|qu)y$/i, '$1ies'],\n\t    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n\t    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n\t    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n\t    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n\t    [/(pe)(?:rson|ople)$/i, '$1ople'],\n\t    [/(child)(?:ren)?$/i, '$1ren'],\n\t    [/eaux$/i, '$0'],\n\t    [/m[ae]n$/i, 'men'],\n\t    ['thou', 'you']\n\t  ].forEach(function (rule) {\n\t    return pluralize.addPluralRule(rule[0], rule[1]);\n\t  });\n\t\n\t  /**\n\t   * Singularization rules.\n\t   */\n\t  [\n\t    [/s$/i, ''],\n\t    [/(ss)$/i, '$1'],\n\t    [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(?:sis|ses)$/i, '$1sis'],\n\t    [/(^analy)(?:sis|ses)$/i, '$1sis'],\n\t    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n\t    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n\t    [/([^aeiouy]|qu)ies$/i, '$1y'],\n\t    [/(^[pl]|zomb|^(?:neck)?t|[aeo][lt]|cut)ies$/i, '$1ie'],\n\t    [/(\\b(?:mon|smil))ies$/i, '$1ey'],\n\t    [/(m|l)ice$/i, '$1ouse'],\n\t    [/(seraph|cherub)im$/i, '$1'],\n\t    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n\t    [/(e[mn]u)s?$/i, '$1'],\n\t    [/(movie|twelve)s$/i, '$1'],\n\t    [/(cris|test|diagnos)(?:is|es)$/i, '$1is'],\n\t    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n\t    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n\t    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n\t    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n\t    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n\t    [/(matr|append)ices$/i, '$1ix'],\n\t    [/(pe)(rson|ople)$/i, '$1rson'],\n\t    [/(child)ren$/i, '$1'],\n\t    [/(eau)x?$/i, '$1'],\n\t    [/men$/i, 'man']\n\t  ].forEach(function (rule) {\n\t    return pluralize.addSingularRule(rule[0], rule[1]);\n\t  });\n\t\n\t  /**\n\t   * Uncountable rules.\n\t   */\n\t  [\n\t    // Singular words with no plurals.\n\t    'advice',\n\t    'agenda',\n\t    'bison',\n\t    'bream',\n\t    'buffalo',\n\t    'carp',\n\t    'chassis',\n\t    'cod',\n\t    'cooperation',\n\t    'corps',\n\t    'digestion',\n\t    'debris',\n\t    'diabetes',\n\t    'energy',\n\t    'equipment',\n\t    'elk',\n\t    'excretion',\n\t    'expertise',\n\t    'flounder',\n\t    'gallows',\n\t    'garbage',\n\t    'graffiti',\n\t    'headquarters',\n\t    'health',\n\t    'herpes',\n\t    'highjinks',\n\t    'homework',\n\t    'information',\n\t    'jeans',\n\t    'justice',\n\t    'kudos',\n\t    'labour',\n\t    'machinery',\n\t    'mackerel',\n\t    'media',\n\t    'mews',\n\t    'moose',\n\t    'news',\n\t    'pike',\n\t    'plankton',\n\t    'pliers',\n\t    'pollution',\n\t    'premises',\n\t    'rain',\n\t    'rice',\n\t    'salmon',\n\t    'scissors',\n\t    'series',\n\t    'sewage',\n\t    'shambles',\n\t    'shrimp',\n\t    'species',\n\t    'staff',\n\t    'swine',\n\t    'trout',\n\t    'tuna',\n\t    'whiting',\n\t    'wildebeest',\n\t    'wildlife',\n\t    'you',\n\t    // Regexes.\n\t    /pox$/i, // \"chickpox\", \"smallpox\"\n\t    /ois$/i,\n\t    /deer$/i, // \"deer\", \"reindeer\"\n\t    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n\t    /sheep$/i,\n\t    /measles$/i,\n\t    /[^aeiou]ese$/i // \"chinese\", \"japanese\"\n\t  ].forEach(pluralize.addUncountableRule);\n\t\n\t  return pluralize;\n\t});\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ee88083b7fe487507adf\n **/","/*eslint semi: [\"error\", \"never\"]*/\n\nconst pluralize = require('pluralize')\n\nconst r = (arr) => arr[Math.floor(Math.random() * arr.length)]\n\nconst upper = (str) => str[0].toUpperCase() + str.slice(1)\nconst upperAll = (str) => str.split(' ').map(upper).join(' ').split('-').map(upper).join('-')\n\nconst weighted = (weights) => {\n  const totalWeight = weights.reduce((p, c) => p + c[1], 0)\n\n  let lastWeight = 0\n  for(let i=0; i<weights.length; i++) {\n    const w = weights[i]\n    w[1] = w[1] / totalWeight + lastWeight\n    lastWeight = w[1]\n  }\n\n  //Set the final weight to exactly one\n  weights[weights.length-1][1] = 1\n\n  return () => {\n    const rr = Math.random()\n    for(let i=0; i<weights.length; i++) {\n      const w = weights[i]\n      if(rr < w[1]) {\n        return w[0]\n      }\n    }\n    throw new Error('We goofed!')\n  }\n}\n\n\nconst corpora = {\n  // adv: require('./corpora/data/words/adverbs').adverbs,\n  adjectives: require('./corpora/data/words/adjs').adjs,\n  metals: require('./corpora/data/materials/metals').metals,\n\n  animals: require('./corpora/data/animals/common').animals,\n  appliances: require('./corpora/data/technology/appliances').appliances,\n  colors: require('./corpora/data/colors/web_colors').colors.map(c => c.color.split(/(?=[A-Z])/).join(' ')),\n  flowers: require('./corpora/data/plants/flowers').flowers,\n  monsters: require('./corpora/data/mythology/monsters').names,\n  rooms: require('./corpora/data/architecture/rooms').rooms,\n  vegetables: require('./corpora/data/foods/vegetables').vegetables\n}\n\n\nconst descriptor = weighted(\n  [\n    [corpora.adjectives, 1],\n    [corpora.colors, 0.8],\n    [corpora.metals, 0.2]\n  ]\n)\n\nconst name = weighted(\n  [\n    [corpora.animals, 1.3],\n    [corpora.appliances, 0.1],\n    [corpora.flowers, 0.2],\n    [corpora.monsters, 1.5],\n    [corpora.rooms, 0.1],\n    [corpora.vegetables, 0.25]\n  ]\n)\n\nconst gangName = () => ['The', upperAll(r(descriptor())), upperAll(pluralize(r(name())))]\n\nif(typeof window !== 'undefined') {\n  window.gangName = gangName\n}\nelse {\n  console.log(gangName().join(' '))\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./index.js\n **/","module.exports = {\n\t\"animals\": [\n\t\t\"aardvark\",\n\t\t\"alligator\",\n\t\t\"alpaca\",\n\t\t\"antelope\",\n\t\t\"ape\",\n\t\t\"armadillo\",\n\t\t\"baboon\",\n\t\t\"badger\",\n\t\t\"bat\",\n\t\t\"bear\",\n\t\t\"beaver\",\n\t\t\"bison\",\n\t\t\"boar\",\n\t\t\"buffalo\",\n\t\t\"bull\",\n\t\t\"camel\",\n\t\t\"canary\",\n\t\t\"capybara\",\n\t\t\"cat\",\n\t\t\"chameleon\",\n\t\t\"cheetah\",\n\t\t\"chimpanzee\",\n\t\t\"chinchilla\",\n\t\t\"chipmunk\",\n\t\t\"cougar\",\n\t\t\"cow\",\n\t\t\"coyote\",\n\t\t\"crocodile\",\n\t\t\"crow\",\n\t\t\"deer\",\n\t\t\"dingo\",\n\t\t\"dog\",\n\t\t\"donkey\",\n\t\t\"dromedary\",\n\t\t\"elephant\",\n\t\t\"elk\",\n\t\t\"ewe\",\n\t\t\"ferret\",\n\t\t\"finch\",\n\t\t\"fish\",\n\t\t\"fox\",\n\t\t\"frog\",\n\t\t\"gazelle\",\n\t\t\"gila monster\",\n\t\t\"giraffe\",\n\t\t\"gnu\",\n\t\t\"goat\",\n\t\t\"gopher\",\n\t\t\"gorilla\",\n\t\t\"grizzly bear\",\n\t\t\"ground hog\",\n\t\t\"guinea pig\",\n\t\t\"hamster\",\n\t\t\"hedgehog\",\n\t\t\"hippopotamus\",\n\t\t\"hog\",\n\t\t\"horse\",\n\t\t\"hyena\",\n\t\t\"ibex\",\n\t\t\"iguana\",\n\t\t\"impala\",\n\t\t\"jackal\",\n\t\t\"jaguar\",\n\t\t\"kangaroo\",\n\t\t\"koala\",\n\t\t\"lamb\",\n\t\t\"lemur\",\n\t\t\"leopard\",\n\t\t\"lion\",\n\t\t\"lizard\",\n\t\t\"llama\",\n\t\t\"lynx\",\n\t\t\"mandrill\",\n\t\t\"marmoset\",\n\t\t\"mink\",\n\t\t\"mole\",\n\t\t\"mongoose\",\n\t\t\"monkey\",\n\t\t\"moose\",\n\t\t\"mountain goat\",\n\t\t\"mouse\",\n\t\t\"mule\",\n\t\t\"muskrat\",\n\t\t\"mustang\",\n\t\t\"mynah bird\",\n\t\t\"newt\",\n\t\t\"ocelot\",\n\t\t\"opossum\",\n\t\t\"orangutan\",\n\t\t\"oryx\",\n\t\t\"otter\",\n\t\t\"ox\",\n\t\t\"panda\",\n\t\t\"panther\",\n\t\t\"parakeet\",\n\t\t\"parrot\",\n\t\t\"pig\",\n\t\t\"platypus\",\n\t\t\"polar bear\",\n\t\t\"porcupine\",\n\t\t\"porpoise\",\n\t\t\"prairie dog\",\n\t\t\"puma\",\n\t\t\"rabbit\",\n\t\t\"raccoon\",\n\t\t\"ram\",\n\t\t\"rat\",\n\t\t\"reindeer\",\n\t\t\"reptile\",\n\t\t\"rhinoceros\",\n\t\t\"salamander\",\n\t\t\"seal\",\n\t\t\"sheep\",\n\t\t\"shrew\",\n\t\t\"silver fox\",\n\t\t\"skunk\",\n\t\t\"sloth\",\n\t\t\"snake\",\n\t\t\"squirrel\",\n\t\t\"tapir\",\n\t\t\"tiger\",\n\t\t\"toad\",\n\t\t\"turtle\",\n\t\t\"walrus\",\n\t\t\"warthog\",\n\t\t\"weasel\",\n\t\t\"whale\",\n\t\t\"wildcat\",\n\t\t\"wolf\",\n\t\t\"wolverine\",\n\t\t\"wombat\",\n\t\t\"woodchuck\",\n\t\t\"yak\",\n\t\t\"zebra\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/animals/common.json\n **/","module.exports = {\n\t\"description\": \"Different kinds of rooms\",\n\t\"rooms\": [\n\t\t\"aerary\",\n\t\t\"aircraft cabin\",\n\t\t\"airport lounge\",\n\t\t\"alcove\",\n\t\t\"anatomical theatre\",\n\t\t\"anechoic chamber\",\n\t\t\"antechamber\",\n\t\t\"anteroom\",\n\t\t\"armory\",\n\t\t\"assembly room\",\n\t\t\"atelier\",\n\t\t\"attic\",\n\t\t\"auditorium\",\n\t\t\"backroom\",\n\t\t\"ballroom\",\n\t\t\"basement\",\n\t\t\"bathroom\",\n\t\t\"bedroom\",\n\t\t\"billiard room\",\n\t\t\"boardroom\",\n\t\t\"boiler room\",\n\t\t\"boudoir\",\n\t\t\"breakfast nook\",\n\t\t\"breezeway\",\n\t\t\"cabin\",\n\t\t\"cafeteria\",\n\t\t\"caldarium\",\n\t\t\"cellar\",\n\t\t\"changing room\",\n\t\t\"chapel\",\n\t\t\"classroom\",\n\t\t\"clean room\",\n\t\t\"cloakroom\",\n\t\t\"closet\",\n\t\t\"cold room\",\n\t\t\"common room\",\n\t\t\"computer lab\",\n\t\t\"conference room\",\n\t\t\"conservatory\",\n\t\t\"control room\",\n\t\t\"conversation pit\",\n\t\t\"corner office\",\n\t\t\"courtroom\",\n\t\t\"cry room\",\n\t\t\"darkroom\",\n\t\t\"den\",\n\t\t\"dining room\",\n\t\t\"dormitory\",\n\t\t\"drawing room\",\n\t\t\"dressing room\",\n\t\t\"electrical room\",\n\t\t\"emergency room\",\n\t\t\"engine room\",\n\t\t\"equipment room\",\n\t\t\"fallout shelter\",\n\t\t\"family room\",\n\t\t\"fitting room\",\n\t\t\"foyer\",\n\t\t\"game room\",\n\t\t\"garage\",\n\t\t\"guest room\",\n\t\t\"gym\",\n\t\t\"hotel room\",\n\t\t\"kitchen\",\n\t\t\"laundry room\",\n\t\t\"library\",\n\t\t\"living room\",\n\t\t\"lobby\",\n\t\t\"locker room\",\n\t\t\"loft\",\n\t\t\"lounge\",\n\t\t\"mailroom\",\n\t\t\"map room\",\n\t\t\"motel room\",\n\t\t\"mud room\",\n\t\t\"newsroom\",\n\t\t\"nursery\",\n\t\t\"office\",\n\t\t\"panic room\",\n\t\t\"pantry\",\n\t\t\"parlor\",\n\t\t\"playroom\",\n\t\t\"pool room\",\n\t\t\"print room\",\n\t\t\"rec room\",\n\t\t\"salon\",\n\t\t\"sauna\",\n\t\t\"schoolroom\",\n\t\t\"showroom\",\n\t\t\"sitting room\",\n\t\t\"staff room\",\n\t\t\"stockroom\",\n\t\t\"storm cellar\",\n\t\t\"studio\",\n\t\t\"study\",\n\t\t\"sunroom\",\n\t\t\"tearoom\",\n\t\t\"throne room\",\n\t\t\"transmission control room\",\n\t\t\"tv room\",\n\t\t\"utility room\",\n\t\t\"waiting room\",\n\t\t\"washroom\",\n\t\t\"water closet\",\n\t\t\"weight room\",\n\t\t\"wine cellar\",\n\t\t\"wiring closet\",\n\t\t\"workshop\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/architecture/rooms.json\n **/","module.exports = {\n\t\"description\": \"List of named HTML colors\",\n\t\"colors\": [\n\t\t{\n\t\t\t\"color\": \"AliceBlue\",\n\t\t\t\"hex\": \"#F0F8FF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"AntiqueWhite\",\n\t\t\t\"hex\": \"#FAEBD7\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Aqua\",\n\t\t\t\"hex\": \"#00FFFF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Aquamarine\",\n\t\t\t\"hex\": \"#7FFFD4\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Azure\",\n\t\t\t\"hex\": \"#F0FFFF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Beige\",\n\t\t\t\"hex\": \"#F5F5DC\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Bisque\",\n\t\t\t\"hex\": \"#FFE4C4\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Black\",\n\t\t\t\"hex\": \"#000000\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"BlanchedAlmond\",\n\t\t\t\"hex\": \"#FFEBCD\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Blue\",\n\t\t\t\"hex\": \"#0000FF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"BlueViolet\",\n\t\t\t\"hex\": \"#8A2BE2\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Brown\",\n\t\t\t\"hex\": \"#A52A2A\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"BurlyWood\",\n\t\t\t\"hex\": \"#DEB887\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"CadetBlue\",\n\t\t\t\"hex\": \"#5F9EA0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Chartreuse\",\n\t\t\t\"hex\": \"#7FFF00\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Chocolate\",\n\t\t\t\"hex\": \"#D2691E\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Coral\",\n\t\t\t\"hex\": \"#FF7F50\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"CornflowerBlue\",\n\t\t\t\"hex\": \"#6495ED\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Cornsilk\",\n\t\t\t\"hex\": \"#FFF8DC\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Crimson\",\n\t\t\t\"hex\": \"#DC143C\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Cyan\",\n\t\t\t\"hex\": \"#00FFFF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkBlue\",\n\t\t\t\"hex\": \"#00008B\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkCyan\",\n\t\t\t\"hex\": \"#008B8B\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkGoldenRod\",\n\t\t\t\"hex\": \"#B8860B\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkGray\",\n\t\t\t\"hex\": \"#A9A9A9\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkGreen\",\n\t\t\t\"hex\": \"#006400\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkKhaki\",\n\t\t\t\"hex\": \"#BDB76B\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkMagenta\",\n\t\t\t\"hex\": \"#8B008B\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkOliveGreen\",\n\t\t\t\"hex\": \"#556B2F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkOrange\",\n\t\t\t\"hex\": \"#FF8C00\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkOrchid\",\n\t\t\t\"hex\": \"#9932CC\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkRed\",\n\t\t\t\"hex\": \"#8B0000\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkSalmon\",\n\t\t\t\"hex\": \"#E9967A\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkSeaGreen\",\n\t\t\t\"hex\": \"#8FBC8F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkSlateBlue\",\n\t\t\t\"hex\": \"#483D8B\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkSlateGray\",\n\t\t\t\"hex\": \"#2F4F4F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkTurquoise\",\n\t\t\t\"hex\": \"#00CED1\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DarkViolet\",\n\t\t\t\"hex\": \"#9400D3\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DeepPink\",\n\t\t\t\"hex\": \"#FF1493\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DeepSkyBlue\",\n\t\t\t\"hex\": \"#00BFFF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DimGray\",\n\t\t\t\"hex\": \"#696969\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"DodgerBlue\",\n\t\t\t\"hex\": \"#1E90FF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"FireBrick\",\n\t\t\t\"hex\": \"#B22222\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"FloralWhite\",\n\t\t\t\"hex\": \"#FFFAF0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"ForestGreen\",\n\t\t\t\"hex\": \"#228B22\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Fuchsia\",\n\t\t\t\"hex\": \"#FF00FF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Gainsboro\",\n\t\t\t\"hex\": \"#DCDCDC\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"GhostWhite\",\n\t\t\t\"hex\": \"#F8F8FF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Gold\",\n\t\t\t\"hex\": \"#FFD700\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"GoldenRod\",\n\t\t\t\"hex\": \"#DAA520\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Gray\",\n\t\t\t\"hex\": \"#808080\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Green\",\n\t\t\t\"hex\": \"#008000\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"GreenYellow\",\n\t\t\t\"hex\": \"#ADFF2F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"HoneyDew\",\n\t\t\t\"hex\": \"#F0FFF0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"HotPink\",\n\t\t\t\"hex\": \"#FF69B4\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"IndianRed \",\n\t\t\t\"hex\": \"#CD5C5C\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Indigo \",\n\t\t\t\"hex\": \"#4B0082\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Ivory\",\n\t\t\t\"hex\": \"#FFFFF0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Khaki\",\n\t\t\t\"hex\": \"#F0E68C\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Lavender\",\n\t\t\t\"hex\": \"#E6E6FA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LavenderBlush\",\n\t\t\t\"hex\": \"#FFF0F5\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LawnGreen\",\n\t\t\t\"hex\": \"#7CFC00\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LemonChiffon\",\n\t\t\t\"hex\": \"#FFFACD\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightBlue\",\n\t\t\t\"hex\": \"#ADD8E6\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightCoral\",\n\t\t\t\"hex\": \"#F08080\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightCyan\",\n\t\t\t\"hex\": \"#E0FFFF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightGoldenRodYellow\",\n\t\t\t\"hex\": \"#FAFAD2\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightGray\",\n\t\t\t\"hex\": \"#D3D3D3\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightGreen\",\n\t\t\t\"hex\": \"#90EE90\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightPink\",\n\t\t\t\"hex\": \"#FFB6C1\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightSalmon\",\n\t\t\t\"hex\": \"#FFA07A\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightSeaGreen\",\n\t\t\t\"hex\": \"#20B2AA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightSkyBlue\",\n\t\t\t\"hex\": \"#87CEFA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightSlateGray\",\n\t\t\t\"hex\": \"#778899\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightSteelBlue\",\n\t\t\t\"hex\": \"#B0C4DE\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LightYellow\",\n\t\t\t\"hex\": \"#FFFFE0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Lime\",\n\t\t\t\"hex\": \"#00FF00\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"LimeGreen\",\n\t\t\t\"hex\": \"#32CD32\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Linen\",\n\t\t\t\"hex\": \"#FAF0E6\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Magenta\",\n\t\t\t\"hex\": \"#FF00FF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Maroon\",\n\t\t\t\"hex\": \"#800000\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumAquaMarine\",\n\t\t\t\"hex\": \"#66CDAA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumBlue\",\n\t\t\t\"hex\": \"#0000CD\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumOrchid\",\n\t\t\t\"hex\": \"#BA55D3\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumPurple\",\n\t\t\t\"hex\": \"#9370DB\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumSeaGreen\",\n\t\t\t\"hex\": \"#3CB371\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumSlateBlue\",\n\t\t\t\"hex\": \"#7B68EE\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumSpringGreen\",\n\t\t\t\"hex\": \"#00FA9A\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumTurquoise\",\n\t\t\t\"hex\": \"#48D1CC\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MediumVioletRed\",\n\t\t\t\"hex\": \"#C71585\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MidnightBlue\",\n\t\t\t\"hex\": \"#191970\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MintCream\",\n\t\t\t\"hex\": \"#F5FFFA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"MistyRose\",\n\t\t\t\"hex\": \"#FFE4E1\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Moccasin\",\n\t\t\t\"hex\": \"#FFE4B5\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"NavajoWhite\",\n\t\t\t\"hex\": \"#FFDEAD\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Navy\",\n\t\t\t\"hex\": \"#000080\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"OldLace\",\n\t\t\t\"hex\": \"#FDF5E6\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Olive\",\n\t\t\t\"hex\": \"#808000\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"OliveDrab\",\n\t\t\t\"hex\": \"#6B8E23\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Orange\",\n\t\t\t\"hex\": \"#FFA500\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"OrangeRed\",\n\t\t\t\"hex\": \"#FF4500\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Orchid\",\n\t\t\t\"hex\": \"#DA70D6\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PaleGoldenRod\",\n\t\t\t\"hex\": \"#EEE8AA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PaleGreen\",\n\t\t\t\"hex\": \"#98FB98\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PaleTurquoise\",\n\t\t\t\"hex\": \"#AFEEEE\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PaleVioletRed\",\n\t\t\t\"hex\": \"#DB7093\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PapayaWhip\",\n\t\t\t\"hex\": \"#FFEFD5\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PeachPuff\",\n\t\t\t\"hex\": \"#FFDAB9\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Peru\",\n\t\t\t\"hex\": \"#CD853F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Pink\",\n\t\t\t\"hex\": \"#FFC0CB\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Plum\",\n\t\t\t\"hex\": \"#DDA0DD\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"PowderBlue\",\n\t\t\t\"hex\": \"#B0E0E6\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Purple\",\n\t\t\t\"hex\": \"#800080\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Red\",\n\t\t\t\"hex\": \"#FF0000\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"RosyBrown\",\n\t\t\t\"hex\": \"#BC8F8F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"RoyalBlue\",\n\t\t\t\"hex\": \"#4169E1\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SaddleBrown\",\n\t\t\t\"hex\": \"#8B4513\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Salmon\",\n\t\t\t\"hex\": \"#FA8072\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SandyBrown\",\n\t\t\t\"hex\": \"#F4A460\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SeaGreen\",\n\t\t\t\"hex\": \"#2E8B57\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SeaShell\",\n\t\t\t\"hex\": \"#FFF5EE\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Sienna\",\n\t\t\t\"hex\": \"#A0522D\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Silver\",\n\t\t\t\"hex\": \"#C0C0C0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SkyBlue\",\n\t\t\t\"hex\": \"#87CEEB\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SlateBlue\",\n\t\t\t\"hex\": \"#6A5ACD\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SlateGray\",\n\t\t\t\"hex\": \"#708090\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Snow\",\n\t\t\t\"hex\": \"#FFFAFA\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SpringGreen\",\n\t\t\t\"hex\": \"#00FF7F\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"SteelBlue\",\n\t\t\t\"hex\": \"#4682B4\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Tan\",\n\t\t\t\"hex\": \"#D2B48C\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Teal\",\n\t\t\t\"hex\": \"#008080\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Thistle\",\n\t\t\t\"hex\": \"#D8BFD8\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Tomato\",\n\t\t\t\"hex\": \"#FF6347\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Turquoise\",\n\t\t\t\"hex\": \"#40E0D0\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Violet\",\n\t\t\t\"hex\": \"#EE82EE\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Wheat\",\n\t\t\t\"hex\": \"#F5DEB3\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"White\",\n\t\t\t\"hex\": \"#FFFFFF\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"WhiteSmoke\",\n\t\t\t\"hex\": \"#F5F5F5\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"Yellow\",\n\t\t\t\"hex\": \"#FFFF00\"\n\t\t},\n\t\t{\n\t\t\t\"color\": \"YellowGreen\",\n\t\t\t\"hex\": \"#9ACD32\"\n\t\t}\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/colors/web_colors.json\n **/","module.exports = {\n\t\"description\": \"A list of vegetables.\",\n\t\"vegetables\": [\n\t\t\"acorn squash\",\n\t\t\"alfalfa sprout\",\n\t\t\"amaranth\",\n\t\t\"anise\",\n\t\t\"artichoke\",\n\t\t\"arugula\",\n\t\t\"asparagus\",\n\t\t\"aubergine\",\n\t\t\"azuki bean\",\n\t\t\"banana squash\",\n\t\t\"basil\",\n\t\t\"bean sprout\",\n\t\t\"beet\",\n\t\t\"black bean\",\n\t\t\"black-eyed pea\",\n\t\t\"bok choy\",\n\t\t\"borlotti bean\",\n\t\t\"broad beans\",\n\t\t\"broccoflower\",\n\t\t\"broccoli\",\n\t\t\"brussels sprout\",\n\t\t\"butternut squash\",\n\t\t\"cabbage\",\n\t\t\"calabrese\",\n\t\t\"caraway\",\n\t\t\"carrot\",\n\t\t\"cauliflower\",\n\t\t\"cayenne pepper\",\n\t\t\"celeriac\",\n\t\t\"celery\",\n\t\t\"chamomile\",\n\t\t\"chard\",\n\t\t\"chayote\",\n\t\t\"chickpea\",\n\t\t\"chives\",\n\t\t\"cilantro\",\n\t\t\"collard green\",\n\t\t\"corn\",\n\t\t\"corn salad\",\n\t\t\"courgette\",\n\t\t\"cucumber\",\n\t\t\"daikon\",\n\t\t\"delicata\",\n\t\t\"dill\",\n\t\t\"eggplant\",\n\t\t\"endive\",\n\t\t\"fennel\",\n\t\t\"fiddlehead\",\n\t\t\"frisee\",\n\t\t\"garlic\",\n\t\t\"gem squash\",\n\t\t\"ginger\",\n\t\t\"green bean\",\n\t\t\"green pepper\",\n\t\t\"habanero\",\n\t\t\"herbs and spice\",\n\t\t\"horseradish\",\n\t\t\"hubbard squash\",\n\t\t\"jalapeno\",\n\t\t\"jerusalem artichoke\",\n\t\t\"jicama\",\n\t\t\"kale\",\n\t\t\"kidney bean\",\n\t\t\"kohlrabi\",\n\t\t\"lavender\",\n\t\t\"leek \",\n\t\t\"legume\",\n\t\t\"lemon grass\",\n\t\t\"lentils\",\n\t\t\"lettuce\",\n\t\t\"lima bean\",\n\t\t\"mamey\",\n\t\t\"mangetout\",\n\t\t\"marjoram\",\n\t\t\"mung bean\",\n\t\t\"mushrooms\",\n\t\t\"mustard green\",\n\t\t\"navy bean\",\n\t\t\"nettles\",\n\t\t\"new zealand spinach\",\n\t\t\"nopale\",\n\t\t\"okra\",\n\t\t\"onion\",\n\t\t\"oregano\",\n\t\t\"paprika\",\n\t\t\"parsley\",\n\t\t\"parsnip\",\n\t\t\"patty pan\",\n\t\t\"peas\",\n\t\t\"pinto bean\",\n\t\t\"potato\",\n\t\t\"pumpkin\",\n\t\t\"radicchio\",\n\t\t\"radish\",\n\t\t\"rhubarb\",\n\t\t\"rosemary\",\n\t\t\"runner bean\",\n\t\t\"rutabaga\",\n\t\t\"sage\",\n\t\t\"scallion\",\n\t\t\"shallot\",\n\t\t\"skirret\",\n\t\t\"snap pea\",\n\t\t\"soy bean\",\n\t\t\"spaghetti squash\",\n\t\t\"spinach\",\n\t\t\"squash \",\n\t\t\"sweet potato\",\n\t\t\"tabasco pepper\",\n\t\t\"taro\",\n\t\t\"tat soi\",\n\t\t\"thyme\",\n\t\t\"tomato\",\n\t\t\"topinambur\",\n\t\t\"tubers\",\n\t\t\"turnip\",\n\t\t\"wasabi\",\n\t\t\"water chestnut\",\n\t\t\"watercress\",\n\t\t\"white radish\",\n\t\t\"yam\",\n\t\t\"zucchini\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/foods/vegetables.json\n **/","module.exports = {\n\t\"description\": \"metals\",\n\t\"metals\": [\n\t\t\"actinium\",\n\t\t\"aluminium\",\n\t\t\"americium\",\n\t\t\"barium\",\n\t\t\"berkelium\",\n\t\t\"beryllium\",\n\t\t\"bismuth\",\n\t\t\"bohrium\",\n\t\t\"cadmium\",\n\t\t\"calcium\",\n\t\t\"californium\",\n\t\t\"cerium\",\n\t\t\"cesium\",\n\t\t\"chromium\",\n\t\t\"cobalt\",\n\t\t\"copper\",\n\t\t\"curium\",\n\t\t\"darmstadtium\",\n\t\t\"dubnium\",\n\t\t\"dysprosium\",\n\t\t\"einsteinium\",\n\t\t\"erbium\",\n\t\t\"europium\",\n\t\t\"fermium\",\n\t\t\"francium\",\n\t\t\"gadolinium\",\n\t\t\"gallium\",\n\t\t\"gold\",\n\t\t\"hafnium\",\n\t\t\"hassium\",\n\t\t\"holmium\",\n\t\t\"indium\",\n\t\t\"iridium\",\n\t\t\"iron\",\n\t\t\"lanthanum\",\n\t\t\"lawrencium\",\n\t\t\"lead\",\n\t\t\"lithium\",\n\t\t\"lutetium\",\n\t\t\"magnesium\",\n\t\t\"manganese\",\n\t\t\"meitnerium\",\n\t\t\"mendelevium\",\n\t\t\"mercury\",\n\t\t\"molybdenum\",\n\t\t\"neodymium\",\n\t\t\"neptunium\",\n\t\t\"nickel\",\n\t\t\"niobium\",\n\t\t\"nobelium\",\n\t\t\"osmium\",\n\t\t\"palladium\",\n\t\t\"platinum\",\n\t\t\"plutonium\",\n\t\t\"polonium\",\n\t\t\"potassium\",\n\t\t\"praseodymium\",\n\t\t\"promethium\",\n\t\t\"protactinium\",\n\t\t\"radium\",\n\t\t\"rhenium\",\n\t\t\"rhodium\",\n\t\t\"roentgenium\",\n\t\t\"rubidium\",\n\t\t\"ruthenium\",\n\t\t\"rutherfordium\",\n\t\t\"samarium\",\n\t\t\"scandium\",\n\t\t\"seaborgium\",\n\t\t\"silver\",\n\t\t\"sodium\",\n\t\t\"strontium\",\n\t\t\"tantalum\",\n\t\t\"technetium\",\n\t\t\"terbium\",\n\t\t\"thallium\",\n\t\t\"thorium\",\n\t\t\"thulium\",\n\t\t\"tin\",\n\t\t\"titanium\",\n\t\t\"tungsten\",\n\t\t\"ununbium\",\n\t\t\"ununhexium\",\n\t\t\"ununpentium\",\n\t\t\"ununquadium\",\n\t\t\"ununtrium\",\n\t\t\"uranium\",\n\t\t\"vanadium\",\n\t\t\"ytterbium\",\n\t\t\"yttrium\",\n\t\t\"zinc\",\n\t\t\"zirconium\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/materials/metals.json\n **/","module.exports = {\n\t\"description\": \"A list of monsters and other mythic creatures\",\n\t\"sources\": \"some from https://en.wikipedia.org/wiki/Mythic_humanoids, others from memory.\",\n\t\"names\": [\n\t\t\"angel\",\n\t\t\"brownie\",\n\t\t\"bugbear\",\n\t\t\"centaur\",\n\t\t\"chimera\",\n\t\t\"chupacabra\",\n\t\t\"cockatrice\",\n\t\t\"cyclops\",\n\t\t\"demon\",\n\t\t\"djinn\",\n\t\t\"dragon\",\n\t\t\"draugr\",\n\t\t\"dryad\",\n\t\t\"dwarf\",\n\t\t\"elemental\",\n\t\t\"elf\",\n\t\t\"fairy\",\n\t\t\"faun\",\n\t\t\"frost giant\",\n\t\t\"gargoyle\",\n\t\t\"genie\",\n\t\t\"ghast\",\n\t\t\"ghost\",\n\t\t\"ghoul\",\n\t\t\"giant\",\n\t\t\"gnome\",\n\t\t\"goblin\",\n\t\t\"golem\",\n\t\t\"gorgon\",\n\t\t\"gremlin\",\n\t\t\"griffon\",\n\t\t\"hag\",\n\t\t\"harpy\",\n\t\t\"hippogriff\",\n\t\t\"hobgoblin\",\n\t\t\"homonculus\",\n\t\t\"hydra\",\n\t\t\"imp\",\n\t\t\"incubus\",\n\t\t\"kappa\",\n\t\t\"kobold\",\n\t\t\"kraken\",\n\t\t\"lamassu\",\n\t\t\"leprechaun\",\n\t\t\"lich\",\n\t\t\"manticore\",\n\t\t\"mermaid\",\n\t\t\"merman\",\n\t\t\"minotaur\",\n\t\t\"mummy\",\n\t\t\"naga\",\n\t\t\"nix\",\n\t\t\"nymph\",\n\t\t\"ogre\",\n\t\t\"oni\",\n\t\t\"orc\",\n\t\t\"pegasus\",\n\t\t\"phoenix\",\n\t\t\"pixie\",\n\t\t\"poltergeist\",\n\t\t\"roc\",\n\t\t\"sasquatch\",\n\t\t\"satyr\",\n\t\t\"selkie\",\n\t\t\"siren\",\n\t\t\"spectre\",\n\t\t\"sphinx\",\n\t\t\"sprite\",\n\t\t\"succubus\",\n\t\t\"sylph\",\n\t\t\"thunderbird\",\n\t\t\"troll\",\n\t\t\"unicorn\",\n\t\t\"vampire\",\n\t\t\"valkyrie\",\n\t\t\"warg\",\n\t\t\"wendigo\",\n\t\t\"werewolf\",\n\t\t\"wight\",\n\t\t\"witch\",\n\t\t\"wraith\",\n\t\t\"wyvern\",\n\t\t\"yeti\",\n\t\t\"zombie\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/mythology/monsters.json\n **/","module.exports = {\n\t\"flowers\": [\n\t\t\"anemone\",\n\t\t\"amaryllis\",\n\t\t\"amaranth\",\n\t\t\"aster\",\n\t\t\"azalea\",\n\t\t\"babys breath\",\n\t\t\"begonia\",\n\t\t\"bellflower\",\n\t\t\"bergamot\",\n\t\t\"bird of paradise\",\n\t\t\"bluebell\",\n\t\t\"bottlebrush\",\n\t\t\"buttercup\",\n\t\t\"camellias\",\n\t\t\"carnation\",\n\t\t\"chrysantemum\",\n\t\t\"columbine\",\n\t\t\"clover\",\n\t\t\"crocus\",\n\t\t\"daisy\",\n\t\t\"dahlia\",\n\t\t\"daffodil\",\n\t\t\"delphinium\",\n\t\t\"edelweiss\",\n\t\t\"primrose\",\n\t\t\"forget me not\",\n\t\t\"foxglove\",\n\t\t\"freesia\",\n\t\t\"gerbera daisy\",\n\t\t\"gladiolus\",\n\t\t\"hibiscus\",\n\t\t\"heather\",\n\t\t\"hyacinth\",\n\t\t\"holly\",\n\t\t\"iris\",\n\t\t\"jasmine\",\n\t\t\"ladys slipper\",\n\t\t\"lavender\",\n\t\t\"lilac\",\n\t\t\"lily\",\n\t\t\"lotus flower\",\n\t\t\"marigold\",\n\t\t\"marjoram\",\n\t\t\"mimosa\",\n\t\t\"narcissus\",\n\t\t\"orange blossom\",\n\t\t\"orchid\",\n\t\t\"peach blossom\",\n\t\t\"peony\",\n\t\t\"petunia\",\n\t\t\"rhododendron\",\n\t\t\"rosemary\",\n\t\t\"roses\",\n\t\t\"sage\",\n\t\t\"snapdragon\",\n\t\t\"sunflower\",\n\t\t\"tansy\",\n\t\t\"thistle\",\n\t\t\"thyme\",\n\t\t\"tulip\",\n\t\t\"violet\",\n\t\t\"water lily\",\n\t\t\"zinnia\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/plants/flowers.json\n **/","module.exports = {\n\t\"description\": \"A list of home appliances\",\n\t\"appliances\": [\n\t\t\"air conditioner\",\n\t\t\"air fryer\",\n\t\t\"air ioniser\",\n\t\t\"aroma lamp\",\n\t\t\"attic fan\",\n\t\t\"bachelor griller\",\n\t\t\"back boiler\",\n\t\t\"barbecue\",\n\t\t\"beehive oven\",\n\t\t\"beverage opener\",\n\t\t\"boiler\",\n\t\t\"bread machine\",\n\t\t\"butane torch\",\n\t\t\"can opener\",\n\t\t\"ceiling fan\",\n\t\t\"central vacuum cleaner\",\n\t\t\"clothes dryer\",\n\t\t\"clothes iron\",\n\t\t\"coffee percolator\",\n\t\t\"coffeemaker\",\n\t\t\"combo washer dryer\",\n\t\t\"compactor\",\n\t\t\"convection heater\",\n\t\t\"convection microwave\",\n\t\t\"convection oven\",\n\t\t\"corn roaster\",\n\t\t\"crepe maker\",\n\t\t\"deep fryer\",\n\t\t\"dehumidifier\",\n\t\t\"dishwasher\",\n\t\t\"earth oven\",\n\t\t\"electric cooker\",\n\t\t\"electric water boiler\",\n\t\t\"embroidery machine\",\n\t\t\"energy regulator\",\n\t\t\"espresso machine\",\n\t\t\"fan heater\",\n\t\t\"field kitchen\",\n\t\t\"fire pot\",\n\t\t\"fireplace toaster\",\n\t\t\"flame supervision device\",\n\t\t\"flattop grill\",\n\t\t\"food steamer\",\n\t\t\"garbage disposal unit\",\n\t\t\"hair dryer\",\n\t\t\"hair iron\",\n\t\t\"halogen oven\",\n\t\t\"home server\",\n\t\t\"hot plate\",\n\t\t\"humidifier\",\n\t\t\"HVAC\",\n\t\t\"icebox\",\n\t\t\"instant hot water dispenser\",\n\t\t\"internet refrigerator\",\n\t\t\"kettle\",\n\t\t\"kimchi refrigerator\",\n\t\t\"kitchener range\",\n\t\t\"micathermic heater\",\n\t\t\"microwave oven\",\n\t\t\"mousetrap\",\n\t\t\"oil heater\",\n\t\t\"oven\",\n\t\t\"panini sandwich grill\",\n\t\t\"patio heater\",\n\t\t\"pneumatic vacuum\",\n\t\t\"popcorn maker\",\n\t\t\"pressure cooker\",\n\t\t\"pressure fryer\",\n\t\t\"radiator\",\n\t\t\"reflector oven\",\n\t\t\"refrigerator\",\n\t\t\"rice cooker\",\n\t\t\"rice polisher\",\n\t\t\"robotic vacuum cleaner\",\n\t\t\"rotisserie\",\n\t\t\"sandwich toaster\",\n\t\t\"self-cleaning oven\",\n\t\t\"set-n-forget cooker\",\n\t\t\"sewing machine\",\n\t\t\"slow cooker\",\n\t\t\"solar cooker\",\n\t\t\"sous-vide cooker\",\n\t\t\"soy milk maker\",\n\t\t\"stove\",\n\t\t\"sump pump\",\n\t\t\"susceptor\",\n\t\t\"swamp cooler\",\n\t\t\"tandoor\",\n\t\t\"thermal immersion circulator\",\n\t\t\"thermal mass refrigerator\",\n\t\t\"tie press\",\n\t\t\"toaster\",\n\t\t\"toaster oven\",\n\t\t\"trivet\",\n\t\t\"trouser press\",\n\t\t\"turkey fryer\",\n\t\t\"vacuum cleaner\",\n\t\t\"vacuum fryer\",\n\t\t\"vaporizer\",\n\t\t\"waffle iron\",\n\t\t\"washing machine\",\n\t\t\"water cooker\",\n\t\t\"water cooler\",\n\t\t\"water heater\",\n\t\t\"wet grinder\",\n\t\t\"window fan\",\n\t\t\"wood-fired oven\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/technology/appliances.json\n **/","module.exports = {\n\t\"description\": \"A list of English adjectives.\",\n\t\"adjs\": [\n\t\t\"Aristotelian\",\n\t\t\"Arthurian\",\n\t\t\"Bohemian\",\n\t\t\"Brethren\",\n\t\t\"Mosaic\",\n\t\t\"Oceanic\",\n\t\t\"Proctor\",\n\t\t\"Terran\",\n\t\t\"Tudor\",\n\t\t\"abroad\",\n\t\t\"absorbing\",\n\t\t\"abstract\",\n\t\t\"academic\",\n\t\t\"accelerated\",\n\t\t\"accented\",\n\t\t\"accountant\",\n\t\t\"acquainted\",\n\t\t\"acute\",\n\t\t\"addicting\",\n\t\t\"addictive\",\n\t\t\"adjustable\",\n\t\t\"admired\",\n\t\t\"adult\",\n\t\t\"adverse\",\n\t\t\"advised\",\n\t\t\"aerosol\",\n\t\t\"afraid\",\n\t\t\"aggravated\",\n\t\t\"aggressive\",\n\t\t\"agreeable\",\n\t\t\"alienate\",\n\t\t\"aligned\",\n\t\t\"all-round\",\n\t\t\"alleged\",\n\t\t\"almond\",\n\t\t\"alright\",\n\t\t\"altruistic\",\n\t\t\"ambient\",\n\t\t\"ambivalent\",\n\t\t\"amiable\",\n\t\t\"amino\",\n\t\t\"amorphous\",\n\t\t\"amused\",\n\t\t\"anatomical\",\n\t\t\"ancestral\",\n\t\t\"angelic\",\n\t\t\"angrier\",\n\t\t\"answerable\",\n\t\t\"antiquarian\",\n\t\t\"antiretroviral\",\n\t\t\"appellate\",\n\t\t\"applicable\",\n\t\t\"apportioned\",\n\t\t\"approachable\",\n\t\t\"appropriated\",\n\t\t\"archer\",\n\t\t\"aroused\",\n\t\t\"arrested\",\n\t\t\"assertive\",\n\t\t\"assigned\",\n\t\t\"athletic\",\n\t\t\"atrocious\",\n\t\t\"attained\",\n\t\t\"authoritarian\",\n\t\t\"autobiographical\",\n\t\t\"avaricious\",\n\t\t\"avocado\",\n\t\t\"awake\",\n\t\t\"awsome\",\n\t\t\"backstage\",\n\t\t\"backwoods\",\n\t\t\"balding\",\n\t\t\"bandaged\",\n\t\t\"banded\",\n\t\t\"banned\",\n\t\t\"barreled\",\n\t\t\"battle\",\n\t\t\"beaten\",\n\t\t\"begotten\",\n\t\t\"beguiled\",\n\t\t\"bellied\",\n\t\t\"belted\",\n\t\t\"beneficent\",\n\t\t\"besieged\",\n\t\t\"betting\",\n\t\t\"big-money\",\n\t\t\"biggest\",\n\t\t\"biochemical\",\n\t\t\"bipolar\",\n\t\t\"blackened\",\n\t\t\"blame\",\n\t\t\"blessed\",\n\t\t\"blindfolded\",\n\t\t\"bloat\",\n\t\t\"blocked\",\n\t\t\"blooded\",\n\t\t\"blue-collar\",\n\t\t\"blushing\",\n\t\t\"boastful\",\n\t\t\"bolder\",\n\t\t\"bolstered\",\n\t\t\"bonnie\",\n\t\t\"bored\",\n\t\t\"boundary\",\n\t\t\"bounded\",\n\t\t\"bounding\",\n\t\t\"branched\",\n\t\t\"brawling\",\n\t\t\"brazen\",\n\t\t\"breeding\",\n\t\t\"bridged\",\n\t\t\"brimming\",\n\t\t\"brimstone\",\n\t\t\"broadest\",\n\t\t\"broiled\",\n\t\t\"broker\",\n\t\t\"bronze\",\n\t\t\"bruising\",\n\t\t\"buffy\",\n\t\t\"bullied\",\n\t\t\"bungling\",\n\t\t\"burial\",\n\t\t\"buttery\",\n\t\t\"candied\",\n\t\t\"canonical\",\n\t\t\"cantankerous\",\n\t\t\"cardinal\",\n\t\t\"carefree\",\n\t\t\"caretaker\",\n\t\t\"casual\",\n\t\t\"cathartic\",\n\t\t\"causal\",\n\t\t\"chapel\",\n\t\t\"characterized\",\n\t\t\"charcoal\",\n\t\t\"cheeky\",\n\t\t\"cherished\",\n\t\t\"chipotle\",\n\t\t\"chirping\",\n\t\t\"chivalrous\",\n\t\t\"circumstantial\",\n\t\t\"civic\",\n\t\t\"civil\",\n\t\t\"civilised\",\n\t\t\"clanking\",\n\t\t\"clapping\",\n\t\t\"claptrap\",\n\t\t\"classless\",\n\t\t\"cleansed\",\n\t\t\"cleric\",\n\t\t\"cloistered\",\n\t\t\"codified\",\n\t\t\"colloquial\",\n\t\t\"colour\",\n\t\t\"combat\",\n\t\t\"combined\",\n\t\t\"comely\",\n\t\t\"commissioned\",\n\t\t\"commonplace\",\n\t\t\"commuter\",\n\t\t\"commuting\",\n\t\t\"comparable\",\n\t\t\"complementary\",\n\t\t\"compromising\",\n\t\t\"conceding\",\n\t\t\"concentrated\",\n\t\t\"conceptual\",\n\t\t\"conditioned\",\n\t\t\"confederate\",\n\t\t\"confident\",\n\t\t\"confidential\",\n\t\t\"confining\",\n\t\t\"confuse\",\n\t\t\"congressional\",\n\t\t\"consequential\",\n\t\t\"conservative\",\n\t\t\"constituent\",\n\t\t\"contaminated\",\n\t\t\"contemporaneous\",\n\t\t\"contraceptive\",\n\t\t\"convertible\",\n\t\t\"convex\",\n\t\t\"cooked\",\n\t\t\"coronary\",\n\t\t\"corporatist\",\n\t\t\"correlated\",\n\t\t\"corroborated\",\n\t\t\"cosmic\",\n\t\t\"cover\",\n\t\t\"crash\",\n\t\t\"crypto\",\n\t\t\"culminate\",\n\t\t\"cushioned\",\n\t\t\"dandy\",\n\t\t\"dashing\",\n\t\t\"dazzled\",\n\t\t\"decreased\",\n\t\t\"decrepit\",\n\t\t\"dedicated\",\n\t\t\"defaced\",\n\t\t\"defective\",\n\t\t\"defenseless\",\n\t\t\"deluded\",\n\t\t\"deodorant\",\n\t\t\"departed\",\n\t\t\"depress\",\n\t\t\"designing\",\n\t\t\"despairing\",\n\t\t\"destitute\",\n\t\t\"detective\",\n\t\t\"determined\",\n\t\t\"devastating\",\n\t\t\"deviant\",\n\t\t\"devilish\",\n\t\t\"devoted\",\n\t\t\"diagonal\",\n\t\t\"dictated\",\n\t\t\"didactic\",\n\t\t\"differentiated\",\n\t\t\"diffused\",\n\t\t\"dirtier\",\n\t\t\"disabling\",\n\t\t\"disconnected\",\n\t\t\"discovered\",\n\t\t\"disdainful\",\n\t\t\"diseased\",\n\t\t\"disfigured\",\n\t\t\"disheartened\",\n\t\t\"disheveled\",\n\t\t\"disillusioned\",\n\t\t\"disparate\",\n\t\t\"dissident\",\n\t\t\"doable\",\n\t\t\"doctrinal\",\n\t\t\"doing\",\n\t\t\"dotted\",\n\t\t\"double-blind\",\n\t\t\"downbeat\",\n\t\t\"dozen\",\n\t\t\"draining\",\n\t\t\"draught\",\n\t\t\"dread\",\n\t\t\"dried\",\n\t\t\"dropped\",\n\t\t\"dulled\",\n\t\t\"duplicate\",\n\t\t\"eaten\",\n\t\t\"echoing\",\n\t\t\"economical\",\n\t\t\"elaborated\",\n\t\t\"elastic\",\n\t\t\"elective\",\n\t\t\"electoral\",\n\t\t\"elven\",\n\t\t\"embryo\",\n\t\t\"emerald\",\n\t\t\"emergency\",\n\t\t\"emissary\",\n\t\t\"emotional\",\n\t\t\"employed\",\n\t\t\"enamel\",\n\t\t\"encased\",\n\t\t\"encrusted\",\n\t\t\"endangered\",\n\t\t\"engraved\",\n\t\t\"engrossing\",\n\t\t\"enlarged\",\n\t\t\"enlisted\",\n\t\t\"enlivened\",\n\t\t\"ensconced\",\n\t\t\"entangled\",\n\t\t\"enthralling\",\n\t\t\"entire\",\n\t\t\"envious\",\n\t\t\"eradicated\",\n\t\t\"eroded\",\n\t\t\"esoteric\",\n\t\t\"essential\",\n\t\t\"evaporated\",\n\t\t\"ever-present\",\n\t\t\"evergreen\",\n\t\t\"everlasting\",\n\t\t\"exacting\",\n\t\t\"exasperated\",\n\t\t\"excess\",\n\t\t\"exciting\",\n\t\t\"executable\",\n\t\t\"existent\",\n\t\t\"exonerated\",\n\t\t\"exorbitant\",\n\t\t\"exponential\",\n\t\t\"export\",\n\t\t\"extraordinary\",\n\t\t\"exultant\",\n\t\t\"exulting\",\n\t\t\"facsimile\",\n\t\t\"fading\",\n\t\t\"fainter\",\n\t\t\"faith-based\",\n\t\t\"fallacious\",\n\t\t\"faltering\",\n\t\t\"famous\",\n\t\t\"fancier\",\n\t\t\"fast-growing\",\n\t\t\"fated\",\n\t\t\"favourable\",\n\t\t\"fearless\",\n\t\t\"feathered\",\n\t\t\"fellow\",\n\t\t\"fermented\",\n\t\t\"ferocious\",\n\t\t\"fiddling\",\n\t\t\"filling\",\n\t\t\"firmer\",\n\t\t\"fitted\",\n\t\t\"flammable\",\n\t\t\"flawed\",\n\t\t\"fledgling\",\n\t\t\"fleshy\",\n\t\t\"flexible\",\n\t\t\"flickering\",\n\t\t\"floral\",\n\t\t\"flowering\",\n\t\t\"flowing\",\n\t\t\"foggy\",\n\t\t\"folic\",\n\t\t\"foolhardy\",\n\t\t\"foolish\",\n\t\t\"footy\",\n\t\t\"forehand\",\n\t\t\"forked\",\n\t\t\"formative\",\n\t\t\"formulaic\",\n\t\t\"foul-mouthed\",\n\t\t\"fractional\",\n\t\t\"fragrant\",\n\t\t\"fraudulent\",\n\t\t\"freakish\",\n\t\t\"freckled\",\n\t\t\"freelance\",\n\t\t\"freight\",\n\t\t\"fresh\",\n\t\t\"fretted\",\n\t\t\"frugal\",\n\t\t\"fulfilling\",\n\t\t\"fuming\",\n\t\t\"funded\",\n\t\t\"funny\",\n\t\t\"garbled\",\n\t\t\"gathered\",\n\t\t\"geologic\",\n\t\t\"geometric\",\n\t\t\"gibberish\",\n\t\t\"gilded\",\n\t\t\"ginger\",\n\t\t\"glare\",\n\t\t\"glaring\",\n\t\t\"gleaming\",\n\t\t\"glorified\",\n\t\t\"glorious\",\n\t\t\"goalless\",\n\t\t\"gold-plated\",\n\t\t\"goody\",\n\t\t\"grammatical\",\n\t\t\"grande\",\n\t\t\"grateful\",\n\t\t\"gratuitous\",\n\t\t\"graven\",\n\t\t\"greener\",\n\t\t\"grinding\",\n\t\t\"grizzly\",\n\t\t\"groaning\",\n\t\t\"grudging\",\n\t\t\"guaranteed\",\n\t\t\"gusty\",\n\t\t\"gypsy\",\n\t\t\"half-breed\",\n\t\t\"hand-held\",\n\t\t\"handheld\",\n\t\t\"hands-off\",\n\t\t\"hard-pressed\",\n\t\t\"harlot\",\n\t\t\"healing\",\n\t\t\"healthier\",\n\t\t\"healthiest\",\n\t\t\"heart\",\n\t\t\"heart-shaped\",\n\t\t\"heathen\",\n\t\t\"hedonistic\",\n\t\t\"heralded\",\n\t\t\"herbal\",\n\t\t\"high-density\",\n\t\t\"high-performance\",\n\t\t\"high-res\",\n\t\t\"high-yield\",\n\t\t\"hissy\",\n\t\t\"hitless\",\n\t\t\"holiness\",\n\t\t\"homesick\",\n\t\t\"honorable\",\n\t\t\"hooded\",\n\t\t\"hopeless\",\n\t\t\"horrendous\",\n\t\t\"horrible\",\n\t\t\"hot-button\",\n\t\t\"huddled\",\n\t\t\"human\",\n\t\t\"humbling\",\n\t\t\"humid\",\n\t\t\"humiliating\",\n\t\t\"hypnotized\",\n\t\t\"idealistic\",\n\t\t\"idiosyncratic\",\n\t\t\"ignited\",\n\t\t\"illustrated\",\n\t\t\"illustrative\",\n\t\t\"imitated\",\n\t\t\"immense\",\n\t\t\"immersive\",\n\t\t\"immigrant\",\n\t\t\"immoral\",\n\t\t\"impassive\",\n\t\t\"impressionable\",\n\t\t\"improbable\",\n\t\t\"impulsive\",\n\t\t\"in-between\",\n\t\t\"in-flight\",\n\t\t\"inattentive\",\n\t\t\"inbound\",\n\t\t\"inbounds\",\n\t\t\"incalculable\",\n\t\t\"incomprehensible\",\n\t\t\"indefatigable\",\n\t\t\"indigo\",\n\t\t\"indiscriminate\",\n\t\t\"indomitable\",\n\t\t\"inert\",\n\t\t\"inflate\",\n\t\t\"inform\",\n\t\t\"inheriting\",\n\t\t\"injured\",\n\t\t\"injurious\",\n\t\t\"inking\",\n\t\t\"inoffensive\",\n\t\t\"insane\",\n\t\t\"insensible\",\n\t\t\"insidious\",\n\t\t\"insincere\",\n\t\t\"insistent\",\n\t\t\"insolent\",\n\t\t\"insufferable\",\n\t\t\"intemperate\",\n\t\t\"interdependent\",\n\t\t\"interesting\",\n\t\t\"interfering\",\n\t\t\"intern\",\n\t\t\"interpreted\",\n\t\t\"intersecting\",\n\t\t\"intolerable\",\n\t\t\"intolerant\",\n\t\t\"intuitive\",\n\t\t\"irresolute\",\n\t\t\"irritate\",\n\t\t\"jealous\",\n\t\t\"jerking\",\n\t\t\"joining\",\n\t\t\"joint\",\n\t\t\"journalistic\",\n\t\t\"joyful\",\n\t\t\"keyed\",\n\t\t\"knowing\",\n\t\t\"lacklustre\",\n\t\t\"laden\",\n\t\t\"lagging\",\n\t\t\"lamented\",\n\t\t\"laughable\",\n\t\t\"layered\",\n\t\t\"leather\",\n\t\t\"leathern\",\n\t\t\"leery\",\n\t\t\"left-footed\",\n\t\t\"legible\",\n\t\t\"leisure\",\n\t\t\"lessening\",\n\t\t\"liberating\",\n\t\t\"life-size\",\n\t\t\"lifted\",\n\t\t\"lightest\",\n\t\t\"limitless\",\n\t\t\"listening\",\n\t\t\"literary\",\n\t\t\"liver\",\n\t\t\"livid\",\n\t\t\"lobster\",\n\t\t\"locked\",\n\t\t\"long-held\",\n\t\t\"long-lasting\",\n\t\t\"long-running\",\n\t\t\"long-suffering\",\n\t\t\"loudest\",\n\t\t\"loveliest\",\n\t\t\"low-budget\",\n\t\t\"low-carb\",\n\t\t\"lowering\",\n\t\t\"lucid\",\n\t\t\"luckless\",\n\t\t\"lusty\",\n\t\t\"luxurious\",\n\t\t\"magazine\",\n\t\t\"maniac\",\n\t\t\"manmade\",\n\t\t\"maroon\",\n\t\t\"mastered\",\n\t\t\"mated\",\n\t\t\"material\",\n\t\t\"materialistic\",\n\t\t\"meaningful\",\n\t\t\"measuring\",\n\t\t\"mediaeval\",\n\t\t\"medical\",\n\t\t\"meditated\",\n\t\t\"medley\",\n\t\t\"melodic\",\n\t\t\"memorable\",\n\t\t\"memorial\",\n\t\t\"metabolic\",\n\t\t\"metallic\",\n\t\t\"metallurgical\",\n\t\t\"metering\",\n\t\t\"midair\",\n\t\t\"midterm\",\n\t\t\"midway\",\n\t\t\"mighty\",\n\t\t\"migrating\",\n\t\t\"mind-blowing\",\n\t\t\"mind-boggling\",\n\t\t\"minor\",\n\t\t\"mirrored\",\n\t\t\"misguided\",\n\t\t\"misshapen\",\n\t\t\"mitigated\",\n\t\t\"mixed\",\n\t\t\"modernized\",\n\t\t\"molecular\",\n\t\t\"monarch\",\n\t\t\"monastic\",\n\t\t\"morbid\",\n\t\t\"motley\",\n\t\t\"motorized\",\n\t\t\"mounted\",\n\t\t\"multi-million\",\n\t\t\"multidisciplinary\",\n\t\t\"muscled\",\n\t\t\"muscular\",\n\t\t\"muted\",\n\t\t\"mysterious\",\n\t\t\"mythic\",\n\t\t\"nail-biting\",\n\t\t\"natural\",\n\t\t\"nauseous\",\n\t\t\"negative\",\n\t\t\"networked\",\n\t\t\"neurological\",\n\t\t\"neutered\",\n\t\t\"newest\",\n\t\t\"night\",\n\t\t\"nitrous\",\n\t\t\"no-fly\",\n\t\t\"noncommercial\",\n\t\t\"nonsense\",\n\t\t\"north\",\n\t\t\"nuanced\",\n\t\t\"occurring\",\n\t\t\"offensive\",\n\t\t\"oldest\",\n\t\t\"oncoming\",\n\t\t\"one-eyed\",\n\t\t\"one-year\",\n\t\t\"onstage\",\n\t\t\"onward\",\n\t\t\"opaque\",\n\t\t\"open-ended\",\n\t\t\"operating\",\n\t\t\"opportunist\",\n\t\t\"opposing\",\n\t\t\"opt-in\",\n\t\t\"ordinate\",\n\t\t\"outdone\",\n\t\t\"outlaw\",\n\t\t\"outsized\",\n\t\t\"overboard\",\n\t\t\"overheated\",\n\t\t\"oversize\",\n\t\t\"overworked\",\n\t\t\"oyster\",\n\t\t\"paced\",\n\t\t\"panting\",\n\t\t\"paralyzed\",\n\t\t\"paramount\",\n\t\t\"parental\",\n\t\t\"parted\",\n\t\t\"partisan\",\n\t\t\"passive\",\n\t\t\"pastel\",\n\t\t\"patriot\",\n\t\t\"peacekeeping\",\n\t\t\"pedestrian\",\n\t\t\"peevish\",\n\t\t\"penal\",\n\t\t\"penned\",\n\t\t\"pensive\",\n\t\t\"perceptual\",\n\t\t\"perky\",\n\t\t\"permissible\",\n\t\t\"pernicious\",\n\t\t\"perpetuate\",\n\t\t\"perplexed\",\n\t\t\"pervasive\",\n\t\t\"petrochemical\",\n\t\t\"philosophical\",\n\t\t\"picturesque\",\n\t\t\"pillaged\",\n\t\t\"piped\",\n\t\t\"piquant\",\n\t\t\"pitching\",\n\t\t\"plausible\",\n\t\t\"pliable\",\n\t\t\"plumb\",\n\t\t\"politician\",\n\t\t\"polygamous\",\n\t\t\"poorest\",\n\t\t\"portmanteau\",\n\t\t\"posed\",\n\t\t\"positive\",\n\t\t\"possible\",\n\t\t\"postpartum\",\n\t\t\"prank\",\n\t\t\"pre-emptive\",\n\t\t\"precocious\",\n\t\t\"predicted\",\n\t\t\"premium\",\n\t\t\"preparatory\",\n\t\t\"prerequisite\",\n\t\t\"prescient\",\n\t\t\"preserved\",\n\t\t\"presidential\",\n\t\t\"pressed\",\n\t\t\"pressurized\",\n\t\t\"presumed\",\n\t\t\"prewar\",\n\t\t\"priced\",\n\t\t\"pricier\",\n\t\t\"primal\",\n\t\t\"primer\",\n\t\t\"primetime\",\n\t\t\"printed\",\n\t\t\"private\",\n\t\t\"problem\",\n\t\t\"procedural\",\n\t\t\"process\",\n\t\t\"prodigious\",\n\t\t\"professional\",\n\t\t\"programmed\",\n\t\t\"progressive\",\n\t\t\"prolific\",\n\t\t\"promising\",\n\t\t\"promulgated\",\n\t\t\"pronged\",\n\t\t\"proportionate\",\n\t\t\"protracted\",\n\t\t\"pulled\",\n\t\t\"pulsed\",\n\t\t\"purgatory\",\n\t\t\"quick\",\n\t\t\"rapid-fire\",\n\t\t\"raunchy\",\n\t\t\"razed\",\n\t\t\"reactive\",\n\t\t\"readable\",\n\t\t\"realizing\",\n\t\t\"recognised\",\n\t\t\"recovering\",\n\t\t\"recurrent\",\n\t\t\"recycled\",\n\t\t\"redeemable\",\n\t\t\"reflecting\",\n\t\t\"regal\",\n\t\t\"registering\",\n\t\t\"reliable\",\n\t\t\"reminiscent\",\n\t\t\"remorseless\",\n\t\t\"removable\",\n\t\t\"renewable\",\n\t\t\"repeating\",\n\t\t\"repellent\",\n\t\t\"reserve\",\n\t\t\"resigned\",\n\t\t\"respectful\",\n\t\t\"rested\",\n\t\t\"restrict\",\n\t\t\"resultant\",\n\t\t\"retaliatory\",\n\t\t\"retiring\",\n\t\t\"revelatory\",\n\t\t\"reverend\",\n\t\t\"reversing\",\n\t\t\"revolving\",\n\t\t\"ridiculous\",\n\t\t\"right-hand\",\n\t\t\"ringed\",\n\t\t\"risque\",\n\t\t\"robust\",\n\t\t\"roomful\",\n\t\t\"rotating\",\n\t\t\"roused\",\n\t\t\"rubber\",\n\t\t\"run-down\",\n\t\t\"running\",\n\t\t\"runtime\",\n\t\t\"rustling\",\n\t\t\"safest\",\n\t\t\"salient\",\n\t\t\"sanctioned\",\n\t\t\"saute\",\n\t\t\"saved\",\n\t\t\"scandalized\",\n\t\t\"scarlet\",\n\t\t\"scattering\",\n\t\t\"sceptical\",\n\t\t\"scheming\",\n\t\t\"scoundrel\",\n\t\t\"scratched\",\n\t\t\"scratchy\",\n\t\t\"scrolled\",\n\t\t\"seated\",\n\t\t\"second-best\",\n\t\t\"segregated\",\n\t\t\"self-taught\",\n\t\t\"semiautomatic\",\n\t\t\"senior\",\n\t\t\"sensed\",\n\t\t\"sentient\",\n\t\t\"sexier\",\n\t\t\"shadowy\",\n\t\t\"shaken\",\n\t\t\"shaker\",\n\t\t\"shameless\",\n\t\t\"shaped\",\n\t\t\"shiny\",\n\t\t\"shipped\",\n\t\t\"shivering\",\n\t\t\"shoestring\",\n\t\t\"short\",\n\t\t\"short-lived\",\n\t\t\"signed\",\n\t\t\"simplest\",\n\t\t\"simplistic\",\n\t\t\"sizable\",\n\t\t\"skeleton\",\n\t\t\"skinny\",\n\t\t\"skirting\",\n\t\t\"skyrocketed\",\n\t\t\"slamming\",\n\t\t\"slanting\",\n\t\t\"slapstick\",\n\t\t\"sleek\",\n\t\t\"sleepless\",\n\t\t\"sleepy\",\n\t\t\"slender\",\n\t\t\"slimmer\",\n\t\t\"smacking\",\n\t\t\"smokeless\",\n\t\t\"smothered\",\n\t\t\"smouldering\",\n\t\t\"snuff\",\n\t\t\"socialized\",\n\t\t\"solid-state\",\n\t\t\"sometime\",\n\t\t\"sought\",\n\t\t\"spanking\",\n\t\t\"sparing\",\n\t\t\"spattered\",\n\t\t\"specialized\",\n\t\t\"specific\",\n\t\t\"speedy\",\n\t\t\"spherical\",\n\t\t\"spiky\",\n\t\t\"spineless\",\n\t\t\"sprung\",\n\t\t\"squint\",\n\t\t\"stainless\",\n\t\t\"standing\",\n\t\t\"starlight\",\n\t\t\"startled\",\n\t\t\"stately\",\n\t\t\"statewide\",\n\t\t\"stereoscopic\",\n\t\t\"sticky\",\n\t\t\"stimulant\",\n\t\t\"stinky\",\n\t\t\"stoked\",\n\t\t\"stolen\",\n\t\t\"storied\",\n\t\t\"strained\",\n\t\t\"strapping\",\n\t\t\"strengthened\",\n\t\t\"stubborn\",\n\t\t\"stylized\",\n\t\t\"suave\",\n\t\t\"subjective\",\n\t\t\"subjugated\",\n\t\t\"subordinate\",\n\t\t\"succeeding\",\n\t\t\"suffering\",\n\t\t\"summary\",\n\t\t\"sunset\",\n\t\t\"sunshine\",\n\t\t\"supernatural\",\n\t\t\"supervisory\",\n\t\t\"supply-side\",\n\t\t\"surrogate\",\n\t\t\"suspended\",\n\t\t\"suspenseful\",\n\t\t\"swarthy\",\n\t\t\"sweating\",\n\t\t\"sweeping\",\n\t\t\"swinging\",\n\t\t\"swooning\",\n\t\t\"sympathize\",\n\t\t\"synchronized\",\n\t\t\"synonymous\",\n\t\t\"synthetic\",\n\t\t\"tailed\",\n\t\t\"tallest\",\n\t\t\"tangible\",\n\t\t\"tanked\",\n\t\t\"tarry\",\n\t\t\"technical\",\n\t\t\"tectonic\",\n\t\t\"telepathic\",\n\t\t\"tenderest\",\n\t\t\"territorial\",\n\t\t\"testimonial\",\n\t\t\"theistic\",\n\t\t\"thicker\",\n\t\t\"threatening\",\n\t\t\"tight-lipped\",\n\t\t\"timed\",\n\t\t\"timely\",\n\t\t\"timid\",\n\t\t\"torrent\",\n\t\t\"totalled\",\n\t\t\"tougher\",\n\t\t\"traditional\",\n\t\t\"transformed\",\n\t\t\"trapped\",\n\t\t\"traveled\",\n\t\t\"traverse\",\n\t\t\"treated\",\n\t\t\"trial\",\n\t\t\"trunk\",\n\t\t\"trusting\",\n\t\t\"trying\",\n\t\t\"twisted\",\n\t\t\"two-lane\",\n\t\t\"tyrannical\",\n\t\t\"unaided\",\n\t\t\"unassisted\",\n\t\t\"unassuming\",\n\t\t\"unattractive\",\n\t\t\"uncapped\",\n\t\t\"uncomfortable\",\n\t\t\"uncontrolled\",\n\t\t\"uncooked\",\n\t\t\"uncooperative\",\n\t\t\"underground\",\n\t\t\"undersea\",\n\t\t\"undisturbed\",\n\t\t\"unearthly\",\n\t\t\"uneasy\",\n\t\t\"unequal\",\n\t\t\"unfazed\",\n\t\t\"unfinished\",\n\t\t\"unforeseen\",\n\t\t\"unforgivable\",\n\t\t\"unidentified\",\n\t\t\"unimaginative\",\n\t\t\"uninspired\",\n\t\t\"unintended\",\n\t\t\"uninvited\",\n\t\t\"universal\",\n\t\t\"unmasked\",\n\t\t\"unorthodox\",\n\t\t\"unparalleled\",\n\t\t\"unpleasant\",\n\t\t\"unprincipled\",\n\t\t\"unread\",\n\t\t\"unreasonable\",\n\t\t\"unregulated\",\n\t\t\"unreliable\",\n\t\t\"unremitting\",\n\t\t\"unsafe\",\n\t\t\"unsanitary\",\n\t\t\"unsealed\",\n\t\t\"unsuccessful\",\n\t\t\"unsupervised\",\n\t\t\"untimely\",\n\t\t\"unwary\",\n\t\t\"unwrapped\",\n\t\t\"uppity\",\n\t\t\"upstart\",\n\t\t\"useless\",\n\t\t\"utter\",\n\t\t\"valiant\",\n\t\t\"valid\",\n\t\t\"valued\",\n\t\t\"vanilla\",\n\t\t\"vaulting\",\n\t\t\"vaunted\",\n\t\t\"veering\",\n\t\t\"vegetative\",\n\t\t\"vented\",\n\t\t\"verbal\",\n\t\t\"verifying\",\n\t\t\"veritable\",\n\t\t\"versed\",\n\t\t\"vinyl\",\n\t\t\"virgin\",\n\t\t\"visceral\",\n\t\t\"visual\",\n\t\t\"voluptuous\",\n\t\t\"walk-on\",\n\t\t\"wanton\",\n\t\t\"warlike\",\n\t\t\"washed\",\n\t\t\"waterproof\",\n\t\t\"waved\",\n\t\t\"weakest\",\n\t\t\"well-bred\",\n\t\t\"well-chosen\",\n\t\t\"well-informed\",\n\t\t\"wetting\",\n\t\t\"wheeled\",\n\t\t\"whirlwind\",\n\t\t\"widen\",\n\t\t\"widening\",\n\t\t\"willful\",\n\t\t\"willing\",\n\t\t\"winnable\",\n\t\t\"winningest\",\n\t\t\"wireless\",\n\t\t\"wistful\",\n\t\t\"woeful\",\n\t\t\"wooded\",\n\t\t\"woodland\",\n\t\t\"wordless\",\n\t\t\"workable\",\n\t\t\"worldly\",\n\t\t\"worldwide\",\n\t\t\"worst-case\",\n\t\t\"worsted\",\n\t\t\"worthless\"\n\t]\n};\n\n\n/** WEBPACK FOOTER **\n ** ./corpora/data/words/adjs.json\n **/","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Title case a string.\n   *\n   * @param  {string} str\n   * @return {string}\n   */\n  function toTitleCase (str) {\n    return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();\n  }\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Upper cased words. E.g. \"HELLO\".\n    if (word === word.toUpperCase()) {\n      return token.toUpperCase();\n    }\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return toTitleCase(token);\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {String}   token\n   * @param  {String}   word\n   * @param  {Array}    collection\n   * @return {String}\n   */\n  function sanitizeWord (token, word, collection) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = collection.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = collection[len];\n\n      // If the rule passes, return the replacement.\n      if (rule[0].test(word)) {\n        return word.replace(rule[0], function (match, index, word) {\n          var result = interpolate(rule[1], arguments);\n\n          if (match === '') {\n            return restoreCase(word[index - 1], result);\n          }\n\n          return restoreCase(match, result);\n        });\n      }\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {String}  word\n   * @param  {Number}  count\n   * @param  {Boolean} inclusive\n   * @return {String}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {String} single\n   * @param {String} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['thief', 'thieves'],\n    ['genie', 'genies'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['whiskey', 'whiskies']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|tlas|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[emjzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/(m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(?:sis|ses)$/i, '$1sis'],\n    [/(^analy)(?:sis|ses)$/i, '$1sis'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/([^aeiouy]|qu)ies$/i, '$1y'],\n    [/(^[pl]|zomb|^(?:neck)?t|[aeo][lt]|cut)ies$/i, '$1ie'],\n    [/(\\b(?:mon|smil))ies$/i, '$1ey'],\n    [/(m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|tlas|gas|(?:her|at|gr)o|ris)(?:es)?$/i, '$1'],\n    [/(e[mn]u)s?$/i, '$1'],\n    [/(movie|twelve)s$/i, '$1'],\n    [/(cris|test|diagnos)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|octop|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'advice',\n    'agenda',\n    'bison',\n    'bream',\n    'buffalo',\n    'carp',\n    'chassis',\n    'cod',\n    'cooperation',\n    'corps',\n    'digestion',\n    'debris',\n    'diabetes',\n    'energy',\n    'equipment',\n    'elk',\n    'excretion',\n    'expertise',\n    'flounder',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'machinery',\n    'mackerel',\n    'media',\n    'mews',\n    'moose',\n    'news',\n    'pike',\n    'plankton',\n    'pliers',\n    'pollution',\n    'premises',\n    'rain',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'species',\n    'staff',\n    'swine',\n    'trout',\n    'tuna',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    // Regexes.\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /ois$/i,\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /sheep$/i,\n    /measles$/i,\n    /[^aeiou]ese$/i // \"chinese\", \"japanese\"\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pluralize/pluralize.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}